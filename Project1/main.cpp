
/***************************
4108056022 嚴立宏 第IV次作業11/10
***************************/

#include <Windows.h>
#include <GL/glew.h>
#include <GL/freeglut.h>
#include <stdlib.h>
#include <stdio.h>

#define DRAWARRAY 1
#define DRAWELEMENTS 2
#define DRAWMULTIARRAY 3
#define DRAWMULTIELEMENT 4
#define FPS 60
#define MOVEMENTSPEED 0.07
#define ARMMOVEMENTSPEED 0.005

int derefMethod = 1;
GLuint index[100] = { 0 };
static int rotateAngle = 0;
static int pivotRotateAngle = 0;
static GLdouble moveX = 0;
static GLdouble moveZ = 0;
static float armMoveY = 0;
static float armMoveZ = 0;
int window;

struct Movement {
    bool Foward, Backward, Left, Right;
};

Movement movement = { false, false, false, false };

void indexCounter(int start, int num) {
    for (int i = 0; i <= num; i++) {
        index[i] = start + i;
    }
}
void indexCounter2(GLuint *index2, GLuint start, int num) {
    for (int i = 0; i <= num; i++) {
        index2[i] = start + i;
    }
}

void setupPointers_kuo(void)
{
    static GLfloat vertices[] = { 
                        -0.950f, 0.205f,
                        -0.965f, 0.205f,
                        -0.970f, 0.190f,
                        -0.973f, 0.150f,
                        -0.975f, 0.100f,
                        -0.973f, 0.050f,
                        -0.968f, 0.029f,
                        -0.950f, 0.031f,
                        -0.950f, 0.057f,
                        -0.954f, 0.100f,
                        -0.954f, 0.123f,
                        -0.950f, 0.132f,
                        -0.940f, 0.183f,       //1 (13)


                        -0.940f, 0.183f,
                        -0.925f, 0.167f,
                        -0.925f, 0.147f,
                        -0.940f, 0.134f,
                        -0.950f, 0.132f,        //4 (5)

                        -0.950f, 0.205f,
                        -0.940f, 0.183f,
                        -0.910f, 0.195f,
                        -0.880f, 0.205f,
                        -0.855f, 0.210f,
                        -0.848f, 0.212f,
                        -0.830f, 0.217f,
                        -0.815f, 0.222f,
                        -0.798f, 0.222f,
                        -0.785f, 0.222f,
                        -0.788f, 0.233f,
                        -0.793f, 0.238f,
                        -0.810f, 0.239f,
                        -0.830f, 0.238f,
                        -0.840f, 0.235f,
                        -0.880f, 0.227f,
                        -0.920f, 0.218f,
                        -0.930f, 0.218f,
                        -0.937f, 0.215f,
                        -0.941f, 0.210f,
                        -0.945f, 0.210f,       //2 (21)

                        -0.848f, 0.212f,
                        -0.848f, 0.205f,
                        -0.845f, 0.200f,
                        -0.840f, 0.195f,
                        -0.815f, 0.195f,
                        -0.820f, 0.205f,
                        -0.830f, 0.217f,        //3 (7)

                        -0.925f, 0.167f,
                        -0.925f, 0.147f,
                        -0.920f, 0.150f,
                        -0.905f, 0.155f,
                        -0.870f, 0.170f,
                        -0.847f, 0.178f,
                        -0.830f, 0.181f,
                        -0.814f, 0.181f,
                        -0.812f, 0.187f,
                        -0.815f, 0.195f,
                        -0.840f, 0.195f,
                        -0.854f, 0.192f,
                        -0.875f, 0.182f,
                        -0.900f, 0.173f,        // 5 (14)

                        -0.905f, 0.155f,
                        -0.920f, 0.137f,
                        -0.934f, 0.126f,
                        -0.940f, 0.120f,
                        -0.946f, 0.114f,
                        -0.948f, 0.109f,
                        -0.949f, 0.105f,
                        -0.945f, 0.098f,
                        -0.942f, 0.099f,
                        -0.935f, 0.104f,
                        -0.923f, 0.111f,
                        -0.905f, 0.137f,
                        -0.905f, 0.140f,
                        -0.894f, 0.153f,
                        -0.885f, 0.161f,
                        -0.870f, 0.170f,        //6 (16)

                        -0.923f, 0.111f,
                        -0.925f, 0.106f,
                        -0.940f, 0.093f,
                        -0.942f, 0.090f,
                        -0.941f, 0.077f,
                        -0.937f, 0.071f,
                        -0.930f, 0.073f,
                        -0.910f, 0.082f,
                        -0.890f, 0.091f,
                        -0.880f, 0.095f,
                        -0.854f, 0.105f,
                        -0.851f, 0.109f,
                        -0.849f, 0.114f,
                        -0.849f, 0.122f,
                        -0.854f, 0.125f,
                        -0.857f, 0.125f,
                        -0.861f, 0.121f,
                        -0.870f, 0.118f,
                        -0.880f, 0.116f,
                        -0.882f, 0.120f,        //7 (20)

                        -0.905f, 0.137f,
                        -0.923f, 0.111f,
                        -0.882f, 0.120f,
                        -0.870f, 0.134f,
                        -0.857f, 0.147f,
                        -0.865f, 0.164f,
                        -0.870f, 0.162f,
                        -0.871f, 0.157f,
                        -0.880f, 0.148f,
                        -0.890f, 0.142f,
                        -0.900f, 0.137f,        //8 (11)

                        -0.880f, 0.205f,
                        -0.875f, 0.182f,
                        -0.870f, 0.170f,
                        -0.865f, 0.164f,
                        -0.857f, 0.147f,
                        -0.848f, 0.130f,
                        -0.843f, 0.122f,
                        -0.843f, 0.113f,
                        -0.831f, 0.094f,
                        -0.824f, 0.083f,
                        -0.817f, 0.073f,
                        -0.812f, 0.068f,
                        -0.808f, 0.068f,
                        -0.807f, 0.078f,
                        -0.803f, 0.082f,
                        -0.803f, 0.088f,
                        -0.815f, 0.100f,
                        -0.823f, 0.114f,
                        -0.837f, 0.146f,
                        -0.846f, 0.164f,
                        -0.849f, 0.174f,
                        -0.847f, 0.178f,
                        -0.854f, 0.192f,
                        -0.857f, 0.200f,
                        -0.855f, 0.210f,        //9 (25)

                        -0.843f, 0.122f,
                        -0.843f, 0.113f,
                        -0.850f, 0.100f,
                        -0.860f, 0.090f,
                        -0.870f, 0.080f,
                        -0.880f, 0.073f,
                        -0.890f, 0.066f,
                        -0.901f, 0.060f,
                        -0.857f, 0.066f,
                        -0.854f, 0.070f,
                        -0.850f, 0.074f,
                        -0.844f, 0.080f,
                        -0.838f, 0.085f,
                        -0.831f, 0.094f,
                        -0.823f, 0.114f,
                        -0.817f, 0.130f,
                        -0.813f, 0.140f,
                        -0.813f, 0.150f,
                        -0.819f, 0.155f,
                        -0.825f, 0.166f,
                        -0.830f, 0.163f,
                        -0.833f, 0.157f,
                        -0.837f, 0.146f,        //10 (23)

                        -0.950f, 0.057f,
                        -0.950f, 0.031f,
                        -0.920f, 0.036f,
                        -0.900f, 0.0388f,
                        -0.880f, 0.042f,
                        -0.850f, 0.042f,
                        -0.810f, 0.042f,
                        -0.808f, 0.045f,
                        -0.807f, 0.050f,
                        -0.808f, 0.060f,
                        -0.813f, 0.063f,
                        -0.830f, 0.0644f,
                        -0.850f, 0.064f,
                        -0.857f, 0.066f,
                        -0.901f, 0.060f,
                        -0.920f, 0.057f,
                        -0.935f, 0.055f,        //11 (17)

                        -0.798f, 0.222f,
                        -0.796f, 0.193f,
                        -0.794f, 0.100f,
                        -0.793f, 0.060f,
                        -0.796f, 0.034f,
                        -0.790f, 0.004f,
                        -0.783f, 0.015f,
                        -0.778f, 0.024f,
                        -0.780f, 0.100f,
                        -0.782f, 0.200f,
                        -0.785f, 0.222f,        //12 (11)

                        -0.796f, 0.034f,
                        -0.812f, 0.033f,
                        -0.806f, 0.020f,
                        -0.798f, 0.004f,
                        -0.790f, 0.004f     //13 (5)
    };
        
   glEnableClientState (GL_VERTEX_ARRAY);
   glVertexPointer (2, GL_FLOAT, 0, vertices);
}
void setupPointers_li(void)
{
    static GLfloat vertices[] = {
                        -0.685f, 0.164f,
                        -0.689f, 0.155f,
                        -0.689f, 0.145f,
                        -0.680f, 0.135f,
                        -0.668f, 0.139f,
                        -0.650f, 0.145f,
                        -0.630f, 0.151f,
                        -0.608f, 0.158f,
                        -0.571f, 0.163f,
                        -0.560f, 0.163f,
                        -0.551f, 0.165f,
                        -0.546f, 0.170f,
                        -0.546f, 0.183f,
                        -0.560f, 0.188f,
                        -0.579f, 0.185f,
                        -0.611f, 0.181f,
                        -0.640f, 0.171f,
                        -0.660f, 0.166f,
                        -0.666f, 0.166f,
                        -0.665f, 0.172f,
                        -0.677f, 0.166f,
                        -0.682f, 0.165f,    //1 (22)

                        -0.611f, 0.181f,
                        -0.579f, 0.185f,
                        -0.579f, 0.195f,
                        -0.600f, 0.210f,
                        -0.620f, 0.218f,
                        -0.630f, 0.222f,
                        -0.633f, 0.222f,
                        -0.633f, 0.216f,
                        -0.634f, 0.206f,
                        -0.630f, 0.200f,
                        -0.620f, 0.190f,    //2 (11)

                        -0.608f, 0.158f,
                        -0.620f, 0.143f,
                        -0.640f, 0.128f,
                        -0.654f, 0.118f,
                        -0.656f, 0.098f,
                        -0.657f, 0.110f,
                        -0.650f, 0.093f,
                        -0.645f, 0.093f,
                        -0.620f, 0.111f,
                        -0.611f, 0.118f,
                        -0.611f, 0.132f,
                        -0.610f, 0.140f,
                        -0.600f, 0.149f,
                        -0.590f, 0.156f,
                        -0.571f, 0.163f,    //3 (15)

                        -0.611f, 0.132f,
                        -0.611f, 0.118f,
                        -0.580f, 0.134f,
                        -0.570f, 0.137f,
                        -0.562f, 0.137f,
                        -0.543f, 0.137f,
                        -0.543f, 0.142f,
                        -0.550f, 0.147f,
                        -0.560f, 0.148f,
                        -0.575f, 0.145f,
                        -0.587f, 0.140f,
                        -0.600f, 0.136f,    //4 (12)

                        -0.562f, 0.137f,
                        -0.564f, 0.130f,
                        -0.570f, 0.120f,
                        -0.580f, 0.107f,
                        -0.590f, 0.095f,
                        -0.610f, 0.077f,
                        -0.630f, 0.063f,
                        -0.600f, 0.067f,
                        -0.597f, 0.073f,
                        -0.580f, 0.089f,
                        -0.569f, 0.100f,
                        -0.553f, 0.120f,
                        -0.546f, 0.130f,
                        -0.544f, 0.133f,
                        -0.543f, 0.137f,    //5 (15)

                        -0.630f, 0.063f,
                        -0.660f, 0.060f,
                        -0.680f, 0.058f,
                        -0.690f, 0.058f,
                        -0.687f, 0.050f,
                        -0.679f, 0.040f,
                        -0.670f, 0.035f,
                        -0.665f, 0.033f,
                        -0.660f, 0.034f,
                        -0.650f, 0.037f,
                        -0.620f, 0.042f,
                        -0.580f, 0.049f,
                        -0.560f, 0.053f,
                        -0.540f, 0.053f,
                        -0.520f, 0.050f,
                        -0.510f, 0.050f,
                        -0.508f, 0.055f,
                        -0.509f, 0.060f,
                        -0.514f, 0.067f,
                        -0.520f, 0.068f,
                        -0.540f, 0.070f,
                        -0.560f, 0.068f,
                        -0.580f, 0.068f,
                        -0.600f, 0.067f,    //6 (24)
                        };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void setupPointers_chung(void)
{
    static GLfloat vertices[] = { 
                        -0.450f, 0.188f,
                        -0.455f, 0.190f,
                        -0.460f, 0.190f,
                        -0.465f, 0.185f,
                        -0.468f, 0.173f,
                        -0.466f, 0.160f,
                        -0.463f, 0.145f,
                        -0.458f, 0.130f,
                        -0.450f, 0.115f,
                        -0.446f, 0.110f,
                        -0.439f, 0.105f,
                        -0.435f, 0.104f,
                        -0.432f, 0.107f,
                        -0.433f, 0.111f,
                        -0.438f, 0.120f,
                        -0.436f, 0.130f,
                        -0.438f, 0.140f,
                        -0.441f, 0.160f,
                        -0.442f, 0.170f,
                        -0.447f, 0.175f,
                        -0.445f, 0.180f,    //1 (21)

                        -0.445f, 0.180f,
                        -0.438f, 0.180f,
                        -0.434f, 0.179f,
                        -0.425f, 0.173f,
                        -0.418f, 0.168f,
                        -0.410f, 0.172f,
                        -0.400f, 0.178f,
                        -0.380f, 0.185f,
                        -0.352f, 0.193f,
                        -0.335f, 0.194f,
                        -0.320f, 0.195f,
                        -0.307f, 0.193f,
                        -0.278f, 0.195f,
                        -0.279f, 0.200f,
                        -0.284f, 0.204f,
                        -0.290f, 0.207f,
                        -0.300f, 0.209f,
                        -0.320f, 0.209f,
                        -0.338f, 0.207f,
                        -0.357f, 0.206f,
                        -0.380f, 0.201f,
                        -0.400f, 0.198f,
                        -0.420f, 0.194f,
                        -0.435f, 0.192f,
                        -0.444f, 0.188f,
                        -0.450f, 0.188f,    //2 (26)

                        -0.307f, 0.193f,
                         -0.32f, 0.18f,
                         -0.338f, 0.172f,
                         -0.357f, 0.151f,
                         -0.38f, 0.14f,
                         -0.39f, 0.135f,
                         -0.394f, 0.132f,
                         -0.397f, 0.126f,
                         -0.398f, 0.12f,
                         -0.399f, 0.115f,
                         -0.396f, 0.11f,
                         -0.39f, 0.111f,
                         -0.37f, 0.118f,
                         -0.36f, 0.12f,
                         -0.34f, 0.145f,
                         -0.337f, 0.152f,
                         -0.32f, 0.163f,
                         -0.3f, 0.176f,
                         -0.28f, 0.189f,
                         -0.278f, 0.195f,   //3 (20)

                         -0.357f, 0.206f,
                         -0.338f, 0.207f,
                         -0.339f, 0.215f,
                         -0.339f, 0.223f,
                         -0.337f, 0.23f,
                         -0.338f, 0.235f,
                         -0.345f, 0.238f,
                         -0.353f, 0.235f,
                         -0.356f, 0.23f,
                         -0.356f, 0.217f,   //4 (10)

                         -0.335f, 0.194f,
                         -0.352f, 0.193f,
                         -0.354f, 0.18f,
                         -0.354f, 0.165f,
                         -0.356f, 0.16f,
                         -0.357f, 0.151f,
                         -0.36f, 0.12f,
                         -0.358f, 0.117f,
                         -0.358f, 0.1f,
                         -0.36f, 0.05f,
                         -0.36f, 0.01f,
                         -0.36f, -0.02f,
                         -0.359f, -0.023f,
                         -0.359f, -0.027f,
                         -0.36f, -0.033f,
                         -0.36f, -0.058f,
                         -0.354f, -0.054f,
                         -0.35f, -0.05f,
                         -0.346f, -0.048f,
                         -0.344f, -0.035f,
                         -0.343f, -0.02f,
                         -0.342f, 0.0f,
                         -0.34f, 0.01f,
                         -0.34f, 0.024f,
                         -0.342f, 0.032f,
                         -0.34f, 0.04f,
                         -0.34f, 0.08f,
                         -0.339f, 0.122f,
                         -0.34f, 0.145f,
                         -0.338f, 0.172f,   //5 (30)

                         -0.34f, 0.145f,
	                     -0.339f, 0.122f,
	                     -0.33f, 0.124f,
	                     -0.325f, 0.124f,
	                     -0.32f, 0.125f,
	                     -0.315f, 0.127f,
	                     -0.312f, 0.13f,
	                     -0.312f, 0.135f,
	                     -0.312f, 0.14f,
	                     -0.32f, 0.143f,
	                     -0.33f, 0.144f, //6 (11)
                       };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void setupPointers_hsing(void)
{
    static GLfloat vertices[] = { 
                     -0.267f, 0.094f,
                     -0.268f, 0.08f,
                     -0.27f, 0.07f,
                     -0.26f, 0.06f,
                     -0.254f, 0.062f,
                     -0.23f, 0.078f,
                     -0.2f, 0.092f,
                     -0.17f, 0.102f,
                     -0.16f, 0.102f,
                     -0.156f, 0.098f,
                     -0.152f, 0.104f,
                     -0.14f, 0.108f,
                     -0.135f, 0.108f,
                     -0.13f, 0.104f,
                     -0.126f, 0.108f,
                     -0.12f, 0.114f,
                     -0.114f, 0.114f,
                     -0.11f, 0.1f,
                     -0.105f, 0.097f,
                     -0.10f, 0.104f,
                     -0.098f, 0.107f,
                     -0.095f, 0.109f,
                     -0.092f, 0.11f,
                     -0.09f, 0.118f,
                     -0.075f, 0.119f,
                     -0.073f, 0.114f,
                     -0.07f, 0.11f,
                     -0.067f, 0.11f,
                     -0.065f, 0.115f,
                     -0.06f, 0.12f,
                     -0.055f, 0.122f,
                     -0.04f, 0.122f,
                     0.003f, 0.124f,
                     0.006f, 0.127f,
                     0.006f, 0.136f,
                     0.003f, 0.14f,
                     -0.005f, 0.143f,
                     -0.01f, 0.143f,
                     -0.02f, 0.138f,
                     -0.04f, 0.135f,
                     -0.056f, 0.135f,
                     -0.076f, 0.131f,
                     -0.09f, 0.131f,
                     -0.106f, 0.128f,
                     -0.12f, 0.124f,
                     -0.136f, 0.122f,
                     -0.149f, 0.117f,
                     -0.162f, 0.115f,
                     -0.172f, 0.113f,
                     -0.187f, 0.11f,
                     -0.21f, 0.103f,
                     -0.23f, 0.098f,
                     -0.25f, 0.093f,
                     -0.26f, 0.092f,    //1  54

                     -0.187f, 0.11f,
                     -0.172f, 0.113f,
                     -0.174f, 0.14f,
                     -0.173f, 0.16f,
                     -0.172f, 0.18f,
                     -0.172f, 0.2f,
                     -0.175f, 0.21f,
                     -0.181f, 0.215f,
                     -0.188f, 0.213f,
                     -0.194f, 0.209f,
                     -0.194f, 0.205f,
                     -0.19f, 0.20f,
                     -0.187f, 0.195f,
                     -0.187f, 0.18f,
                     -0.187f, 0.145f,   //2  15

                     -0.162f, 0.115f,
                     -0.149f, 0.117f,
                     -0.148f, 0.18f,
                     -0.148f, 0.208f,
                     -0.153f, 0.215f,
                     -0.158f, 0.22f,
                     -0.164f, 0.22f,
                     -0.17f, 0.218f,
                     -0.17f, 0.213f,
                     -0.163f, 0.21f,
                     -0.16f, 0.2f,
                     -0.159f, 0.185f,
                     -0.161f, 0.16f,
                     -0.161f, 0.14f,    //3  14

                     -0.136f, 0.122f,
                     -0.12f, 0.124f,
                     -0.12f, 0.13f,
                     -0.121f, 0.164f,
                     -0.121f, 0.18f,
                     -0.121f, 0.197f,
                     -0.122f, 0.216f,
                     -0.122f, 0.224f,
                     -0.13f, 0.221f,
                     -0.138f, 0.22f,
                     -0.14f, 0.213f,
                     -0.135f, 0.21f,
                     -0.136f, 0.19f,
                     -0.136f, 0.17f,    //4     14
    
                     -0.122f, 0.224f,
	                 -0.122f, 0.216f,
	                 -0.11f, 0.22f,
	                 -0.102f, 0.222f,
	                 -0.078f, 0.226f,
	                 -0.075f, 0.234f,
	                 -0.087f, 0.24f,
	                 -0.094f, 0.24f,
	                 -0.102f, 0.233f,
	                 -0.112f, 0.228f,   //5  10

                     -0.078f, 0.226f,
	                 -0.102f, 0.222f,
	                 -0.102f, 0.203f,
	                 -0.102f, 0.185f,
	                 -0.102f, 0.172f,
	                 -0.106f, 0.157f,
	                 -0.104f, 0.149f,
	                 -0.106f, 0.128f,
	                 -0.09f, 0.131f,
	                 -0.09f, 0.16f,
	                 -0.088f, 0.183f,
	                 -0.085f, 0.194f,
	                 -0.081f, 0.211f,   //6  13

                     -0.121f, 0.197f,
	                 -0.121f, 0.18f,
	                 -0.102f, 0.185f,
	                 -0.102f, 0.203f,   //7  4

                     -0.121f, 0.164f,
	                 -0.121f, 0.15f,
	                 -0.102f, 0.172f,
	                 -0.102f, 0.185f,
	                 -0.111f, 0.183f,   //8  5

                     -0.121f, 0.15f,
	                 -0.12f, 0.13f,
	                 -0.104f, 0.149f,
	                 -0.106f, 0.157f,   //9  4

                     -0.12f, 0.13f,
	                 -0.114f, 0.126f,
	                 -0.106f, 0.128f,
	                 -0.113f, 0.14f,    //10  4

                     -0.078f, 0.226f,
	                 -0.081f, 0.211f,
	                 -0.058f, 0.21f,
	                 -0.043f, 0.21f,
	                 -0.036f, 0.22f,
	                 -0.033f, 0.23f,
	                 -0.032f, 0.238f,
	                 -0.045f, 0.236f,
	                 -0.066f, 0.222f,
	                 -0.074f, 0.221f,   //11   10

                     -0.043f, 0.21f,
	                 -0.058f, 0.21f,
	                 -0.064f, 0.18f,
	                 -0.066f, 0.157f,
	                 -0.068f, 0.13f,
	                 -0.056f, 0.135f,
	                 -0.056f, 0.153f,
	                 -0.053f, 0.176f,
	                 -0.049f, 0.19f, //12  9

                     -0.085f, 0.194f,
	                 -0.088f, 0.183f,
	                 -0.074f, 0.17f,
	                 -0.066f, 0.157f,
	                 -0.056f, 0.153f,
	                 -0.05f, 0.153f,
	                 -0.05f, 0.16f,
	                 -0.047f, 0.165f,
	                 -0.049f, 0.17f,
	                 -0.053f, 0.176f,
	                 -0.064f, 0.18f,    //13  11

                     -0.09f, 0.165f,
	                 -0.09f, 0.16f,
	                 -0.085f, 0.16f,
	                 -0.08f, 0.16f,
	                 -0.066f, 0.157f,
	                 -0.074f, 0.17f,    //14   6

                     -0.085f, 0.16f,
	                 -0.082f, 0.15f,
	                 -0.077f, 0.14f,
	                 -0.076f, 0.131f,	
	                 -0.068f, 0.13f,		
	                 -0.07f, 0.14f,
	                 -0.077f, 0.15f,
	                 -0.08f, 0.16f,     //15   8

                     -0.22f, 0.068f,
	                 -0.214f, 0.05f,
	                 -0.21f, 0.04f,
	                 -0.204f, 0.035f,
	                 -0.195f, 0.03f,
	                 -0.16f, 0.046f,
	                 -0.146f, 0.055f,
	                 -0.142f, 0.065f,
	                 -0.14f, 0.07f,
	                 -0.17f, 0.064f,
	                 -0.18f, 0.064f,
	                 -0.19f, 0.058f,
	                 -0.2f, 0.06f,      //16   13

                     -0.132f, 0.067f,
	                 -0.12f, 0.071f,
	                 -0.1f, 0.08f,
	                 -0.095f, 0.085f,
	                 -0.13f, 0.073f,        //17   5

                     -0.057f, 0.09f,
	                 -0.054f, 0.08f,
	                 -0.007f, 0.022f,
	                 -0.0f, 0.035f,
	                 -0.0f, 0.05f,
	                 -0.005f, 0.055f, 
	                 -0.024f, 0.07f,        //18  7

                    };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void setupPointers_da(void)
{
    static GLfloat vertices[] = { 
                     0.07f, 0.14f,
                     0.074f, 0.12f,
                     0.08f, 0.113f,
                     0.09f, 0.113f,
                     0.1f, 0.116f,
                     0.11f, 0.123f,
                     0.115f, 0.13f,
                     0.153f, 0.147f,
                     0.167f, 0.15f,
                     0.184f, 0.156f,
                     0.206f, 0.156f,
                     0.208f, 0.162f,
                     0.21f, 0.171f,
                     0.2f, 0.177f,
                     0.187f, 0.176f,
                     0.166f, 0.17f,
                     0.15f, 0.165f,
                     0.13f, 0.158f,
                     0.102f, 0.148f,
                     0.095f, 0.148f,    //1

                     0.2f, 0.177f,
                     0.21f, 0.171f,
                     0.217f, 0.177f,    

                     0.21f, 0.171f,
                     0.208f, 0.162f,
                     0.215f, 0.165f,    

                     0.208f, 0.162f,
                     0.206f, 0.156f,
                     0.212f, 0.158f,    

                     0.187f, 0.198f,
                     0.188f, 0.22f,
                     0.188f, 0.23f,
                     0.186f, 0.232f,
                     0.183f, 0.232f,
                     0.18f, 0.227f,
                     0.177f, 0.22f,
                     0.176f, 0.21f,
                     0.173f, 0.198f,    //2

                     0.179f, 0.198f,
                     0.181f, 0.194f,
                     0.181f, 0.186f,
                     0.179f, 0.17f,
                     0.187f, 0.176f,
                     0.185f, 0.186f,
                     0.187f, 0.198f,

                     0.166f, 0.17f,
                     0.179f, 0.17f,
                     0.175f, 0.176f,
                     0.176f, 0.186f,
                     0.176f, 0.194f,
                     0.179f, 0.198f,
                     0.173f, 0.198f,
                     0.17f, 0.19f,
                     0.168f, 0.18f,

                     0.153f, 0.147f,
                     0.155f, 0.14f,
                     0.168f, 0.14f,
                     0.167f, 0.15f,     //3

                     0.155f, 0.14f,
                     0.153f, 0.13f,
                     0.166f, 0.13f,
                     0.168f, 0.14f,

                     0.153f, 0.13f,
                     0.147f, 0.12f,
                     0.147f, 0.113f,
                     0.155f, 0.1f,
                     0.162f, 0.115f,
                     0.166f, 0.13f,

                     0.147f, 0.113f,
                     0.142f, 0.109f,
                     0.135f, 0.10f,
                     0.145f, 0.083f,
                     0.155f, 0.1f,

                     0.135f, 0.10f,
                     0.125f, 0.09f,
                     0.13f, 0.07f,
                     0.145f, 0.083f,

                     0.125f, 0.09f,
                     0.115f, 0.083f,
                     0.12f, 0.066f,
                     0.13f, 0.07f,

                     0.115f, 0.083f,
                     0.108f, 0.08f,
                     0.11f, 0.066f,
                     0.12f, 0.066f,

                     0.108f, 0.08f,
                     0.104f, 0.075f,
                     0.104f, 0.069f,
                     0.11f, 0.066f,

                     0.185f, 0.11f,
	                 0.222f, 0.081f,
	                 0.23f, 0.095f,
	                 0.21f, 0.103f,
	                 0.2f, 0.107f,      //4

                     0.23f, 0.095f,
	                 0.222f, 0.081f,
	                 0.249f, 0.07f,
	                 0.244f, 0.088f,

                     0.244f, 0.088f,
	                 0.249f, 0.07f,
	                 0.252f, 0.075f,
	                 0.252f, 0.08f,     

                     0.222f, 0.081f,
	                 0.225f, 0.06f,
	                 0.233f, 0.06f,
	                 0.246f, 0.06f,
	                 0.249f, 0.064f,
	                 0.249f, 0.07f,

                     0.233f, 0.06f,
	                 0.24f, 0.053f,
	                 0.246f, 0.06f,

                     0.222f, 0.081f,
	                 0.192f, 0.064f,
	                 0.204f, 0.063f,
	                 0.21f, 0.066f,
	                 0.216f, 0.066f,

                     0.198f, 0.063f,
	                 0.201f, 0.06f,
	                 0.204f, 0.063f,

                     0.222f, 0.081f,
	                 0.216f, 0.066f,
	                 0.22f, 0.063f,
	                 0.225f, 0.06f,

                    };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void setupPointers_xue(void)
{
    static GLfloat vertices[] = {
                     0.35f, 0.247f,
                     0.338f, 0.23f,
                     0.334f, 0.222f,
                     0.344f, 0.216f,
                     0.358f, 0.232f,

                     0.334f, 0.222f,
                     0.322f, 0.228f,
                     0.32f, 0.22f,

                     0.32f, 0.22f,
                     0.318f, 0.2f,
                     0.318f, 0.19f,
                     0.322f, 0.19f,
                     0.347f, 0.19f,
                     0.353f, 0.19f,
                     0.353f, 0.2f,
                     0.353f, 0.203f,
                     0.355f, 0.206f,
                     0.355f, 0.212f,
                     0.344f, 0.216f,
                     0.334f, 0.222f,

                     0.353f, 0.2f,
                     0.356f, 0.195f,
                     0.356f, 0.2f,

                     0.347f, 0.19f,
                     0.353f, 0.19f,
                     0.356f, 0.195f,
                     0.353f, 0.2f,

                     0.322f, 0.19f,
                     0.322f, 0.18f,
                     0.326f, 0.176f,
                     0.326f, 0.16f,
                     0.325f, 0.127f,
                     0.338f, 0.13f,
                     0.338f, 0.148f,
                     0.34f, 0.176f,
                     0.347f, 0.19f,

                     0.34f, 0.176f,
                     0.338f, 0.148f,
                     0.347f, 0.157f,
                     0.357f, 0.163f,
                     0.359f, 0.17f,
                     0.35f, 0.176f,

                     0.347f, 0.157f,
                     0.353f, 0.157f,
                     0.357f, 0.163f,

                     0.35f, 0.176f,
                     0.359f, 0.17f,
                     0.363f, 0.174f,
                     0.371f, 0.18f,
                     0.384f, 0.194f,
                     0.37f, 0.195f,
                     0.37f, 0.189f,
                     0.366f, 0.189f,

                     0.37f, 0.195f,
                     0.365f, 0.2f,
                     0.36f, 0.21f,
                     0.37f, 0.21f,
                     0.378f, 0.213f,
                     0.38f, 0.22f,
                     0.397f, 0.22f,
                     0.397f, 0.216f,
                     0.41f, 0.216f,
                     0.41f, 0.21f,
                     0.408f, 0.205f,
                     0.401f, 0.2f,
                     0.397f, 0.2f,
                     0.395f, 0.198f,
                     0.395f, 0.194f,
                     0.384f, 0.194f,

                     0.408f, 0.205f,
                     0.401f, 0.2f,
                     0.41f, 0.202f,

                     0.384f, 0.194f,
                     0.3885f, 0.19f,
                     0.395f, 0.194f,

                     0.3947f, 0.244f,
                     0.38f, 0.22f,
                     0.397f, 0.22f,
                     0.405f, 0.23f,
                     0.403f, 0.234f,
                     0.4f, 0.24f,

                     0.403f, 0.24f,
                     0.4f, 0.24f,
                     0.403f, 0.234f,

                     0.384f, 0.194f,
                     0.3885f, 0.19f,
                     0.395f, 0.194f,

                     0.3885f, 0.19f,
	                 0.385f, 0.18f,
	                 0.38f, 0.174f,
	                 0.375f, 0.16f,
	                 0.368f, 0.142f,
	                 0.393f, 0.148f,
	                 0.394f, 0.157f,
	                 0.393f, 0.166f,
	                 0.393f, 0.17f,
	                 0.395f, 0.174f,
	                 0.397f, 0.18f,
	                 0.395f, 0.194f,

                     0.375f, 0.16f,
	                 0.369f, 0.152f,
	                 0.368f, 0.142f,

                     0.398f, 0.193f,
	                 0.398f, 0.186f,
	                 0.401f, 0.187f,

                     0.395f, 0.194f,
	                 0.397f, 0.18f,
	                 0.398f, 0.186f,
	                 0.398f, 0.193f,

                         0.393f, 0.166f,
                         0.394f, 0.157f,
                         0.397f, 0.159f,
                         0.397f, 0.164f,

                         0.363f, 0.174f,
                         0.375f, 0.16f,
                         0.38f, 0.174f,
                         0.371f, 0.18f,

                         0.406f, 0.222f,
                         0.41f, 0.216f,
                         0.43f, 0.215f,
                         0.425f, 0.226f,
                         0.418f, 0.222f,

                         0.418f, 0.222f,
                         0.425f, 0.226f,
                         0.42f, 0.226f,

                         0.425f, 0.226f,
                         0.43f, 0.215f,
                         0.435f, 0.214f,
                         0.432f, 0.229f,

                         0.41f, 0.216f,
                         0.42f, 0.213f,
                         0.43f, 0.215f,

                         0.432f, 0.229f,
                         0.435f, 0.214f,
                         0.445f, 0.21f,
                         0.45f, 0.22f,

                         0.45f, 0.22f,
                         0.454f, 0.226f,
                         0.451f, 0.238f,
                         0.444f, 0.239f,
                         0.438f, 0.234f,
                         0.432f, 0.229f,

                         0.435f, 0.214f,
                         0.435f, 0.207f,
                         0.443f, 0.2f,
                         0.445f, 0.21f,

                         0.435f, 0.207f,
                         0.43f, 0.207f,
                         0.42f, 0.204f,
                         0.41f, 0.202f,
                         0.401f, 0.2f,
                         0.402f, 0.1944f,
                         0.41f, 0.187f,
                         0.441f, 0.19f,
                         0.443f, 0.2f,

                         0.41f, 0.187f,
                         0.41f, 0.183f,
                         0.403f, 0.172f,
                         0.403f, 0.166f,
                         0.417f, 0.163f,
                         0.437f, 0.165f,
                         0.438f, 0.18f,
                         0.441f, 0.19f,

                         0.41f, 0.183f,
                         0.406f, 0.182f,
                         0.403f, 0.172f,

                         0.403f, 0.166f,
                         0.406f, 0.163f,
                         0.417f, 0.163f,

                         0.417f, 0.163f,
                         0.435f, 0.161f,
                         0.437f, 0.165f,

                         0.417f, 0.163f,
                         0.417f, 0.157f,
                         0.414f, 0.152f,
                         0.435f, 0.157f,
                         0.435f, 0.161f,

                         0.414f, 0.157f,
                         0.414f, 0.152f,
                         0.417f, 0.157f,

                         0.325f, 0.127f,
                         0.322f, 0.106f,
                         0.335f, 0.115f,
                         0.352f, 0.122f,
                         0.454f, 0.15f,
                         0.46f, 0.16f,
                         0.435f, 0.157f,
                         0.414f, 0.152f,
                         0.393f, 0.148f,
                         0.368f, 0.142f,
                         0.338f, 0.13f,

                             0.46f, 0.16f,
                             0.454f, 0.15f,
                             0.462f, 0.146f,

                             0.46f, 0.16f,
                             0.462f, 0.146f,
                             0.484f, 0.132f,
                             0.488f, 0.14f,
                             0.493f, 0.15f,
                             0.485f, 0.159f,
                             0.478f, 0.159f,

                             0.46f, 0.16f,
                             0.478f, 0.159f,
                             0.478f, 0.163f,

                             0.493f, 0.15f,
                             0.488f, 0.14f,
                             0.494f, 0.142f,

                             0.488f, 0.14f,
                             0.484f, 0.132f,
                             0.488f, 0.135f,

                             0.462f, 0.146f,
                             0.46f, 0.14f,
                             0.46f, 0.133f,
                             0.465f, 0.13f,
                             0.484f, 0.132f,

                             0.46f, 0.14f,
                             0.435f, 0.116f,
                             0.451f, 0.127f,
                             0.46f, 0.133f,

                             0.46f, 0.133f,
                             0.451f, 0.127f,
                             0.455f, 0.127f,

                             0.325f, 0.127f,
                             0.308f, 0.117f,
                             0.3f, 0.114f,
                             0.316f, 0.103f,
                             0.322f, 0.106f,
                             0.335f, 0.115f,

                             0.307f, 0.123f,
                             0.3f, 0.114f,
                             0.308f, 0.117f,

                             0.322f, 0.106f,
                             0.33f, 0.106f,
                             0.335f, 0.115f,

                             0.3f, 0.114f,
                             0.294f, 0.105f,
                             0.29f, 0.1f,
                             0.283f, 0.09f,
                             0.304f, 0.085f,
                             0.31f, 0.095f,
                             0.316f, 0.103f,

                             0.29f, 0.1f,
                             0.283f, 0.098f,
                             0.283f, 0.09f,

                             0.283f, 0.09f,
                             0.279f, 0.08f,
                             0.281f, 0.07f,
                             0.298f, 0.067f,
                             0.3f, 0.075f,
                             0.304f, 0.085f,

                             0.281f, 0.07f,
                             0.286f, 0.063f,
                             0.292f, 0.063f,
                             0.298f, 0.067f,

                             0.345f, 0.074f,
                             0.345f, 0.068f,
                             0.36f, 0.067f,
                             0.38f, 0.072f,
                             0.403f, 0.075f,
                             0.422f, 0.077f,
                             0.44f, 0.08f,
                             0.463f, 0.081f,
                             0.46f, 0.086f,
                             0.455f, 0.09f,
                             0.44f, 0.09f,
                             0.42f, 0.088f,
                             0.39f, 0.084f,
                             0.39f, 0.074f,

                             0.398f, 0.1f,
                             0.39f, 0.09f,
                             0.39f, 0.084f,
                             0.42f, 0.088f,
                             0.408f, 0.1f,

                                 0.398f, 0.1f,
                                 0.39f, 0.116f,
                                 0.4f, 0.126f,
                                 0.407f, 0.126f,
                                 0.415f, 0.12f,
                                 0.408f, 0.1f,

                                 0.374f, 0.11f,
                                 0.385f, 0.103f,
                                 0.39f, 0.116f,

                                 0.39f, 0.116f,
                                 0.385f, 0.103f,
                                 0.398f, 0.1f,

                                 0.407f, 0.129f,
                                 0.4f, 0.126f,
                                 0.407f, 0.126f,

                                 0.415f, 0.129f,
                                 0.407f, 0.129f,
                                 0.407f, 0.126f,
                                 0.415f, 0.12f,

                                 0.415f, 0.129f,
                                 0.415f, 0.12f,
                                 0.419f, 0.12f,

                                 0.403f, 0.075f,
                                 0.406f, 0.065f,
                                 0.407f, 0.05f,
                                 0.42f, 0.05f,
                                 0.422f, 0.077f,

                                 0.407f, 0.05f,
                                 0.404f, 0.03f,
                                 0.418f, 0.007f,
                                 0.42f, 0.05f,

                                 0.404f, 0.03f,
                                 0.395f, 0.01f,
                                 0.397f, -0.02f,
                                 0.414f, 0.0f,
                                 0.418f, 0.007f,

                                 0.395f, 0.01f,
                                 0.384f, -0.005f,
                                 0.372f, -0.015f,
                                 0.36f, -0.04f,
                                 0.397f, -0.02f,

                                 0.355f, -0.025f,
                                 0.36f, -0.04f,
                                 0.372f, -0.015f,

                                 0.355f, -0.025f,
                                 0.334f, -0.036f,
                                 0.34f, -0.048f,
                                 0.36f, -0.04f,

                                 0.3f, -0.04f,
                                 0.3f, -0.046f,
                                 0.31f, -0.048f,
                                 0.31f, -0.04f,

                                 0.277f, -0.034f,
                                 0.3f, -0.046f,
                                 0.3f, -0.04f,

                                 0.334f, -0.036f,
                                 0.31f, -0.04f,
                                 0.31f, -0.048f,
                                 0.34f, -0.048f,
    };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}

void arrayDraw_kuo(void) {
    setupPointers_kuo();
    glDrawArrays(GL_POLYGON, 0, 13);
    glDrawArrays(GL_POLYGON, 13, 5);
    glDrawArrays(GL_POLYGON, 18, 21);
    glDrawArrays(GL_POLYGON, 39, 7);
    glDrawArrays(GL_POLYGON, 46, 14);
    glDrawArrays(GL_POLYGON, 60, 16);
    glDrawArrays(GL_POLYGON, 76, 20);
    glDrawArrays(GL_POLYGON, 96, 11);
    glDrawArrays(GL_POLYGON, 107, 25);
    glDrawArrays(GL_POLYGON, 132, 23);
    glDrawArrays(GL_POLYGON, 155, 17);
    glDrawArrays(GL_POLYGON, 172, 11);
    glDrawArrays(GL_POLYGON, 183, 5);
}
void arrayDraw_li(void) {
    setupPointers_li();
    glDrawArrays(GL_POLYGON, 0, 22);
    glDrawArrays(GL_POLYGON, 22, 11);
    glDrawArrays(GL_POLYGON, 33, 15);
    glDrawArrays(GL_POLYGON, 48, 12);
    glDrawArrays(GL_POLYGON, 60, 15);
    glDrawArrays(GL_POLYGON, 75, 24);
}
void arrayDraw_chung(void) {
    setupPointers_chung();
    glDrawArrays(GL_POLYGON, 0, 21);
    glDrawArrays(GL_POLYGON, 21, 26);
    glDrawArrays(GL_POLYGON, 47, 20);
    glDrawArrays(GL_POLYGON, 67, 10);
    glDrawArrays(GL_POLYGON, 77, 30);
    glDrawArrays(GL_POLYGON, 107, 11);
}
void arrayDraw_hsing(void) {
    setupPointers_hsing();
    glDrawArrays(GL_POLYGON, 0, 54);
    glDrawArrays(GL_POLYGON, 54, 15);
    glDrawArrays(GL_POLYGON, 69, 14);
    glDrawArrays(GL_POLYGON, 83, 14);
    glDrawArrays(GL_POLYGON, 97, 10);
    glDrawArrays(GL_POLYGON, 107, 13);
    glDrawArrays(GL_POLYGON, 120, 4);
    glDrawArrays(GL_POLYGON, 124, 5);
    glDrawArrays(GL_POLYGON, 129, 4);
    glDrawArrays(GL_POLYGON, 133, 4);
    glDrawArrays(GL_POLYGON, 137, 10);
    glDrawArrays(GL_POLYGON, 147, 9);
    glDrawArrays(GL_POLYGON, 156, 11);
    glDrawArrays(GL_POLYGON, 167, 6);
    glDrawArrays(GL_POLYGON, 173, 8);
    glDrawArrays(GL_POLYGON, 181, 13);
    glDrawArrays(GL_POLYGON, 194, 5);
    glDrawArrays(GL_POLYGON, 199, 7);
}
void arrayDraw_da(void) {
    setupPointers_da();
    glDrawArrays(GL_POLYGON, 0, 20);
    glDrawArrays(GL_POLYGON, 20, 3);
    glDrawArrays(GL_POLYGON, 23, 3);
    glDrawArrays(GL_POLYGON, 26, 3);
    glDrawArrays(GL_POLYGON, 29, 9);
    glDrawArrays(GL_POLYGON, 38, 7);
    glDrawArrays(GL_POLYGON, 45, 9);
    glDrawArrays(GL_POLYGON, 54, 4);
    glDrawArrays(GL_POLYGON, 58, 4);
    glDrawArrays(GL_POLYGON, 62, 6);
    glDrawArrays(GL_POLYGON, 68, 5);
    glDrawArrays(GL_POLYGON, 73, 4);
    glDrawArrays(GL_POLYGON, 77, 4);
    glDrawArrays(GL_POLYGON, 81, 4);
    glDrawArrays(GL_POLYGON, 85, 4);
    glDrawArrays(GL_POLYGON, 89, 5);
    glDrawArrays(GL_POLYGON, 94, 4);
    glDrawArrays(GL_POLYGON, 98, 4);
    glDrawArrays(GL_POLYGON, 102, 6);
    glDrawArrays(GL_POLYGON, 108, 3);
    glDrawArrays(GL_POLYGON, 111, 5);
    glDrawArrays(GL_POLYGON, 116, 3);
    glDrawArrays(GL_POLYGON, 119, 4);
   
}
void arrayDraw_xue(void) {
    setupPointers_xue();
    glDrawArrays(GL_POLYGON, 0, 5);
    glDrawArrays(GL_POLYGON, 5, 3);
    glDrawArrays(GL_POLYGON, 8, 12);
    glDrawArrays(GL_POLYGON, 20, 3);
    glDrawArrays(GL_POLYGON, 23, 4);
    glDrawArrays(GL_POLYGON, 27, 9);
    glDrawArrays(GL_POLYGON, 36, 6);
    glDrawArrays(GL_POLYGON, 42, 3);
    glDrawArrays(GL_POLYGON, 45, 8);
    glDrawArrays(GL_POLYGON, 53, 16);
    glDrawArrays(GL_POLYGON, 69, 3);
    glDrawArrays(GL_POLYGON, 72, 3);
    glDrawArrays(GL_POLYGON, 75, 6);
    glDrawArrays(GL_POLYGON, 81, 3);
    glDrawArrays(GL_POLYGON, 84, 3);
    glDrawArrays(GL_POLYGON, 87, 12);
    glDrawArrays(GL_POLYGON, 99, 3);
    glDrawArrays(GL_POLYGON, 102, 3);
    glDrawArrays(GL_POLYGON, 105, 4);
    glDrawArrays(GL_POLYGON, 109, 4);
    glDrawArrays(GL_POLYGON, 113, 4);
    glDrawArrays(GL_POLYGON, 117, 5);
    glDrawArrays(GL_POLYGON, 122, 3);
    glDrawArrays(GL_POLYGON, 125, 4);
    glDrawArrays(GL_POLYGON, 129, 3);
    glDrawArrays(GL_POLYGON, 132, 4);
    glDrawArrays(GL_POLYGON, 136, 6);
    glDrawArrays(GL_POLYGON, 142, 4);
    glDrawArrays(GL_POLYGON, 146, 9);
    glDrawArrays(GL_POLYGON, 155, 8);
    glDrawArrays(GL_POLYGON, 163, 3);
    glDrawArrays(GL_POLYGON, 166, 3);
    glDrawArrays(GL_POLYGON, 169, 3);
    glDrawArrays(GL_POLYGON, 172, 5);
    glDrawArrays(GL_POLYGON, 177, 3);
    glDrawArrays(GL_POLYGON, 180, 11);
    glDrawArrays(GL_POLYGON, 191, 3);
    glDrawArrays(GL_POLYGON, 194, 7);
    glDrawArrays(GL_POLYGON, 201, 3);
    glDrawArrays(GL_POLYGON, 204, 3);
    glDrawArrays(GL_POLYGON, 207, 3);
    glDrawArrays(GL_POLYGON, 210, 5);
    glDrawArrays(GL_POLYGON, 215, 4);
    glDrawArrays(GL_POLYGON, 219, 3);
    glDrawArrays(GL_POLYGON, 222, 6);
    glDrawArrays(GL_POLYGON, 228, 3);
    glDrawArrays(GL_POLYGON, 231, 3);
    glDrawArrays(GL_POLYGON, 234, 7);
    glDrawArrays(GL_POLYGON, 241, 3);
    glDrawArrays(GL_POLYGON, 244, 6);
    glDrawArrays(GL_POLYGON, 250, 4);
    glDrawArrays(GL_POLYGON, 254, 14);
    glDrawArrays(GL_POLYGON, 268, 5);
    glDrawArrays(GL_POLYGON, 273, 6);
    glDrawArrays(GL_POLYGON, 279, 3);
    glDrawArrays(GL_POLYGON, 282, 3);
    glDrawArrays(GL_POLYGON, 285, 3);
    glDrawArrays(GL_POLYGON, 288, 4);
    glDrawArrays(GL_POLYGON, 292, 3);
    glDrawArrays(GL_POLYGON, 295, 5);
    glDrawArrays(GL_POLYGON, 300, 4);
    glDrawArrays(GL_POLYGON, 304, 5);
    glDrawArrays(GL_POLYGON, 309, 5);
    glDrawArrays(GL_POLYGON, 314, 3);
    glDrawArrays(GL_POLYGON, 317, 4);
    glDrawArrays(GL_POLYGON, 321, 4);
    glDrawArrays(GL_POLYGON, 325, 3);
    glDrawArrays(GL_POLYGON, 328, 4);

 }

void setupPointers_logo(void)
{
    static GLfloat vertices[] = {
                     0.672f, 0.243f,
                     0.676f, 0.23f,
                     0.683f, 0.18f,
                     0.72f, 0.22f,

                     0.72f, 0.22f,
                     0.683f, 0.18f,
                     0.682f, 0.13f,
                     0.754f, 0.2f,

                     0.682f, 0.13f,
                     0.672f, 0.08f,
                     0.75f, 0.024f,
                     0.8f, 0.027f,
                     0.867f, 0.055f,
                     0.858f, 0.075f,
                     0.848f, 0.093f,
                     0.843f, 0.1f,
                     0.831f, 0.12f,
                     0.815f, 0.14f,
                     0.799f, 0.16f,
                     0.784f, 0.175f,
                     0.765f, 0.192f,
                     0.754f, 0.2f,

                     0.682f, 0.13f,
                     0.672f, 0.08f,
                     0.7f, 0.013f,
                     0.75f, 0.024f,

                     0.672f, 0.08f,
                     0.657f, 0.03f,
                     0.7f, 0.013f,

                     0.657f, 0.03f,
                     0.64f, -0.013f,
                     0.7f, 0.013f,

                     0.858f, 0.075f,
                     0.8f, 0.027f,
                     0.85f, 0.022f,
                     0.867f, 0.055f,

                     0.867f, 0.055f,
                     0.85f, 0.022f,
                     0.882f, 0.014f,
                     0.875f, 0.035f,

                     0.66f, 0.278f,
                     0.664f, 0.264f,
                     0.705f, 0.25f,
                     0.705f, 0.2655f,
                     0.675f, 0.2724f,

                     0.705f, 0.2655f,
                     0.705f, 0.25f,
                     0.744f, 0.23f,
                     0.735f, 0.261f,

                     0.735f, 0.261f,
                     0.744f, 0.23f,
                     0.772f, 0.21f,
                     0.783f, 0.201f,
                     0.795f, 0.256f,
                     0.765f, 0.258f,

                     0.795f, 0.256f,
                     0.783f, 0.201f,
                     0.804f, 0.18f,
                     0.825f, 0.256f,

                     0.825f, 0.256f,
                     0.804f, 0.18f,
                     0.8227f, 0.16f,
                     0.838f, 0.14f,
                     0.885f, 0.262f,
                     0.855f, 0.258f,

                     0.885f, 0.262f,
                     0.924f, 0.22f,
                     0.929f, 0.24f,
                     0.937f, 0.26f,
                     0.915f, 0.267f,

                     0.838f, 0.14f,
                     0.851f, 0.12f,
                     0.924f, 0.22f,
                     0.885f, 0.262f,

                     0.851f, 0.12f,
                     0.859f, 0.105f,
                     0.918f, 0.18f,
                     0.92f, 0.2f,
                     0.924f, 0.22f,

                     0.859f, 0.105f,
                     0.871f, 0.08f,
                     0.923f, 0.1f,
                     0.919f, 0.12f,
                     0.918f, 0.14f,
                     0.917f, 0.16f,
                     0.918f, 0.18f,

                         0.871f, 0.08f,
                         0.879f, 0.06f,
                         0.885f, 0.04f,
                         0.94f, 0.04f,
                         0.933f, 0.06f,
                         0.927f, 0.08f,
                         0.923f, 0.1f,

                         0.885f, 0.04f,
                         0.89f, 0.012f,
                         0.91f, 0.006f,
                         0.946f, 0.02f,
                         0.94f, 0.04f,

                         0.91f, 0.006f,
                         0.93f, -0.003f,
                         0.955f, 0.0f,
                         0.946f, 0.02f,

                         0.93f, -0.003f,
                         0.95f, -0.012f,
                         0.96f, -0.01f,
                         0.955f, 0.0f,

                         0.95f, -0.012f,
                         0.964f, -0.019f,
                         0.96f, -0.01f,

                         0.915f, 0.267f,
                         0.937f, 0.26f,
                         0.945f, 0.274f,
                        
    };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void setupPointers_ball(void)
{
    static GLfloat vertices[] = {
                        0.765f, 0.192f,
                         0.75f, 0.177f,
                         0.743f, 0.165f,
                         0.737f, 0.145f,
                         0.738f, 0.125f,
                         0.747f, 0.105f,
                         0.76f, 0.09f,
                         0.78f, 0.08f,
                         0.8f, 0.076f,
                         0.82f, 0.078f,
                         0.835f, 0.085f,
                         0.843f, 0.1f,
                         0.831f, 0.12f,
                         0.815f, 0.14f,
                         0.799f, 0.16f,
                         0.784f, 0.175f,

                         0.848f, 0.093f,
                         0.843f, 0.1f,
                         0.835f, 0.085f,

                         0.859f, 0.105f,
                         0.864f, 0.12f,
                         0.85f, 0.12f,

                         0.783f, 0.201f,
                         0.804f, 0.18f,
                         0.8227f, 0.16f,
                         0.838f, 0.14f,
                         0.85f, 0.12f,
                         0.864f, 0.12f,
                         0.867f, 0.14f,
                         0.865f, 0.158f,
                         0.855f, 0.177f,
                         0.84f, 0.19f,
                         0.82f, 0.2f,
                         0.8f, 0.203f,

    };

    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}

void arrayDraw_logo(void) {
    setupPointers_logo();
    glDrawArrays(GL_POLYGON, 0, 4);
    glDrawArrays(GL_POLYGON, 4, 4);
    glDrawArrays(GL_POLYGON, 8, 14);
    glDrawArrays(GL_POLYGON, 22, 4);
    glDrawArrays(GL_POLYGON, 26, 3);
    glDrawArrays(GL_POLYGON, 29, 3);
    glDrawArrays(GL_POLYGON, 32, 4);
    glDrawArrays(GL_POLYGON, 36, 4);
    glDrawArrays(GL_POLYGON, 40, 5);
    glDrawArrays(GL_POLYGON, 45, 4);
    glDrawArrays(GL_POLYGON, 49, 6);
    glDrawArrays(GL_POLYGON, 55, 4);
    glDrawArrays(GL_POLYGON, 59, 6);
    glDrawArrays(GL_POLYGON, 65, 5);
    glDrawArrays(GL_POLYGON, 70, 4);
    glDrawArrays(GL_POLYGON, 74, 5);
    glDrawArrays(GL_POLYGON, 79, 7);
    glDrawArrays(GL_POLYGON, 86, 7);
    glDrawArrays(GL_POLYGON, 93, 5);
    glDrawArrays(GL_POLYGON, 98, 4);
    glDrawArrays(GL_POLYGON, 102, 4);
    glDrawArrays(GL_POLYGON, 106, 3);
    glDrawArrays(GL_POLYGON, 109, 3);
 
}
void arrayDraw_ball(void) {
    setupPointers_ball();
    glColor3ub((rand()%255), (rand() % 255) , (rand() % 255));           // 1 BALL COLOR
    glDrawArrays(GL_POLYGON, 0, 16);
    glDrawArrays(GL_POLYGON, 16, 3);
    glDrawArrays(GL_POLYGON, 19, 3);
    glDrawArrays(GL_POLYGON, 22, 12);
    glColor3f(0.0, 0.5, 0.6);
}

void setupPointers_national(void)
{
    static GLfloat vertices[] = { 
                     -0.955f, -0.182f,
                     -0.955f, -0.264f,
                     -0.944f, -0.182f,
                     -0.944f, -0.264f,

                     -0.944f, -0.2f,
                     -0.896f, -0.263f,
                     -0.944f, -0.182f,
                     -0.896f, -0.247f,

                     -0.896f, -0.183f,
                     -0.896f, -0.263f,
                     -0.887f, -0.183f,
                     -0.887f, -0.263f,

                     -0.862f, -0.22f,
                     -0.852f, -0.22f,
                     -0.858f, -0.213f,
                     -0.847f, -0.213f,
                     -0.85f, -0.206f,
                     -0.838f, -0.211f,
                     -0.838f, -0.204f,
                     -0.83f, -0.211f,
                     -0.83f, -0.204f,
                     -0.824f, -0.213f,
                     -0.821f, -0.205f,
                     -0.82f, -0.218f,
                     -0.814f, -0.21f,
                     -0.819f, -0.226f,
                     -0.81f, -0.217f,
                     -0.819f, -0.256f,
                     -0.81f, -0.226f,
                     -0.817f, -0.262f,
                     -0.81f, -0.26f,
                     -0.813f, -0.264f,
                     -0.808f, -0.264f,

                     -0.819f, -0.226f,
                     -0.824f, -0.229f,
                     -0.819f, -0.235f,
                     -0.833f, -0.2306f,
                     -0.826f, -0.236f,
                     -0.84f, -0.232f,
                     -0.834f, -0.237f,
                     -0.85f, -0.233f,
                     -0.842f, -0.239f,
                     -0.855f, -0.236f,
                     -0.85f, -0.2413f,
                     -0.86f, -0.24f,
                     -0.853f, -0.246f,
                     -0.862f, -0.247f,
                     -0.853f, -0.254f,
                     -0.862f, -0.255f,
                     -0.848f, -0.259f,
                     -0.858f, -0.26f,
                     -0.84f, -0.261f,
                     -0.85f, -0.265f,
                     -0.832f, -0.2586f,
                     -0.842f, -0.2666f,
                     -0.825f, -0.253f,
                     -0.834f, -0.265f,
                     -0.819f, -0.247f,
                     -0.828f, -0.263f,

                     -0.819f, -0.247f,
                     -0.825f, -0.253f,
                     -0.819f, -0.256f,
                     -0.832f, -0.2586f,
                     -0.824f, -0.26f,

                     -0.789f, -0.205f,
                     -0.789f, -0.21f,
                     -0.763f, -0.205f,
                     -0.763f, -0.21f,

                     -0.782f, -0.19f,
                     -0.782f, -0.255f,
                     -0.772f, -0.19f,
                     -0.772f, -0.255f,

                     -0.772f, -0.184f,
                     -0.782f, -0.19f,
                     -0.772f, -0.19f,

                     -0.763f, -0.259f,
                     -0.763f, -0.265f,
                     -0.769f, -0.259f,
                     -0.770f, -0.266f,
                     -0.771f, -0.258f,
                     -0.775f, -0.265f,
                     -0.772f, -0.255f,
                     -0.781f, -0.261f,
                     -0.782f, -0.255f,

                     -0.744f, -0.181f,
                     -0.744f, -0.192f,
                     -0.734f, -0.181f,
                     -0.734f, -0.192f,

                     -0.744f, -0.204f,
                     -0.744f, -0.264f,
                     -0.734f, -0.204f,
                     -0.734f, -0.264f,

                         -0.56f, -0.22f,
                         -0.55f, -0.22f,
                         -0.556f, -0.213f,
                         -0.545f, -0.213f,
                         -0.548f, -0.206f,
                         -0.536f, -0.211f,
                         -0.536f, -0.204f,
                         -0.528f, -0.211f,
                         -0.528f, -0.204f,
                         -0.522f, -0.213f,
                         -0.519f, -0.205f,
                         -0.518f, -0.218f,
                         -0.512f, -0.21f,
                         -0.517f, -0.226f,
                         -0.508f, -0.217f,
                         -0.517f, -0.256f,
                         -0.508f, -0.226f,
                         -0.515f, -0.262f,
                         -0.508f, -0.26f,
                         -0.511f, -0.264f,
                         -0.506f, -0.264f,

                         -0.517f, -0.226f,
                         -0.522f, -0.229f,
                         -0.517f, -0.235f,
                         -0.531f, -0.2306f,
                         -0.524f, -0.236f,
                         -0.538f, -0.232f,
                         -0.532f, -0.237f,
                         -0.548f, -0.233f,
                         -0.540f, -0.239f,
                         -0.553f, -0.236f,
                         -0.548f, -0.2413f,
                         -0.558f, -0.24f,
                         -0.551f, -0.246f,
                         -0.560f, -0.247f,
                         -0.551f, -0.254f,
                         -0.560f, -0.255f,
                         -0.546f, -0.259f,
                         -0.556f, -0.26f,
                         -0.538f, -0.261f,
                         -0.548f, -0.265f,
                         -0.530f, -0.2586f,
                         -0.540f, -0.2666f,
                         -0.523f, -0.253f,
                         -0.532f, -0.265f,
                         -0.517f, -0.247f,
                         -0.526f, -0.263f,

                         -0.517f, -0.247f,
                         -0.523f, -0.253f,
                         -0.517f, -0.256f,
                         -0.530f, -0.2586f,
                         -0.522f, -0.26f,

                         0.172 + 0.01f, -0.181f,
                         0.172 + 0.01f, -0.192f,
                         0.162 + 0.01f, -0.181f,
                         0.162 + 0.01f, -0.192f,

                         0.172 + 0.01f, -0.204f,
                         0.172 + 0.01f, -0.264f,
                         0.162 + 0.01f, -0.204f,
                         0.162 + 0.01f, -0.264f,

                         0.557 + 0.01f, -0.181f,
                         0.557 + 0.01f, -0.192f,
                         0.547 + 0.01f, -0.181f,
                         0.547 + 0.01f, -0.192f,

                         0.557 + 0.01f, -0.204f,
                         0.557 + 0.01f, -0.264f,
                         0.547 + 0.01f, -0.204f,
                         0.547 + 0.01f, -0.264f,

                         0.853 + 0.01f, -0.181f,
                         0.853 + 0.01f, -0.192f,
                         0.843 + 0.01f, -0.181f,
                         0.843 + 0.01f, -0.192f,

                         0.853 + 0.01f, -0.204f,
                         0.853 + 0.01f, -0.264f,
                         0.843 + 0.01f, -0.204f,
                         0.843 + 0.01f, -0.264f,

                         -0.7f, -0.208f,
                         -0.698f, -0.217f,
                         -0.69f, -0.204f,
                         -0.69f, -0.212f,
                         -0.675f, -0.204f,
                         -0.68f, -0.212f,
                         -0.665f, -0.21f,
                         -0.672f, -0.215f,
                         -0.656f, -0.222f,
                         -0.665f, -0.225f,
                         -0.656f, -0.24f,
                         -0.665f, -0.24f,
                         -0.658f, -0.25f,
                         -0.667f, -0.251f,
                         -0.665f, -0.259f,
                         -0.669f, -0.2545f,
                         -0.673f, -0.265f,
                         -0.673f, -0.257f,
                         -0.683f, -0.267f,
                         -0.683f, -0.26f,
                         -0.693f, -0.265f,
                         -0.693f, -0.257f,
                         -0.702f, -0.26f,
                         -0.7f, -0.25f,
                         -0.709f, -0.25f,
                         -0.703f, -0.243f,
                         -0.712f, -0.24f,
                         -0.703f, -0.235f,
                         -0.712f, -0.23f,
                         -0.702f, -0.225f,
                         -0.708f, -0.218f,
                         -0.698f, -0.217f,
                         -0.7f, -0.208f,

                             -0.633f, -0.205f,
                             -0.633f, -0.265f,
                             -0.623f, -0.205f,
                             -0.623f, -0.265f,

                             -0.623f, -0.212f,
                             -0.623f, -0.219f,
                             -0.618f, -0.208f,
                             -0.618f, -0.215f,
                             -0.611f, -0.204f,
                             -0.611f, -0.211f,
                             -0.600f, -0.204f,
                             -0.600f, -0.211f,
                             -0.591f, -0.207f,
                             -0.596f, -0.213f,
                             -0.586f, -0.211f,
                             -0.594f, -0.215f,
                             -0.584f, -0.216f,
                             -0.593f, -0.220f,
                             -0.584f, -0.220f,
                             -0.593f, -0.265f,
                             -0.584f, -0.265f,

                             -0.172f, -0.205f,
                             -0.172f, -0.265f,
                             -0.162f, -0.205f,
                             -0.162f, -0.265f,

                             -0.162f, -0.212f,
                             -0.162f, -0.219f,
                             -0.157f, -0.208f,
                             -0.157f, -0.215f,
                             -0.150f, -0.204f,
                             -0.150f, -0.211f,
                             -0.139f, -0.204f,
                             -0.139f, -0.211f,
                             -0.130f, -0.207f,
                             -0.135f, -0.213f,
                             -0.125f, -0.211f,
                             -0.133f, -0.215f,
                             -0.123f, -0.216f,
                             -0.132f, -0.220f,
                             -0.123f, -0.220f,
                             -0.132f, -0.265f,
                             -0.123f, -0.265f,

                             -0.172 + 0.379f, -0.205f,
                             -0.172 + 0.379f, -0.265f,
                             -0.162 + 0.379f, -0.205f,
                             -0.162 + 0.379f, -0.265f,

                             -0.162 + 0.379f, -0.212f,
                             -0.162 + 0.379f, -0.219f,
                             -0.157 + 0.379f, -0.208f,
                             -0.157 + 0.379f, -0.215f,
                             -0.150 + 0.379f, -0.204f,
                             -0.150 + 0.379f, -0.211f,
                             -0.139 + 0.379f, -0.204f,
                             -0.139 + 0.379f, -0.211f,
                             -0.130 + 0.379f, -0.207f,
                             -0.135 + 0.379f, -0.213f,
                             -0.125 + 0.379f, -0.211f,
                             -0.133 + 0.379f, -0.215f,
                             -0.123 + 0.379f, -0.216f,
                             -0.132 + 0.379f, -0.220f,
                             -0.123 + 0.379f, -0.220f,
                             -0.132 + 0.379f, -0.265f,
                             -0.123 + 0.379f, -0.265f,

                             -0.172 + 0.654f, -0.205f,
                             -0.172 + 0.654f, -0.265f,
                             -0.162 + 0.654f, -0.205f,
                             -0.162 + 0.654f, -0.265f,

                             -0.162 + 0.654f, -0.212f,
                             -0.162 + 0.654f, -0.219f,
                             -0.157 + 0.654f, -0.208f,
                             -0.157 + 0.654f, -0.215f,
                             -0.150 + 0.654f, -0.204f,
                             -0.150 + 0.654f, -0.211f,
                             -0.139 + 0.654f, -0.204f,
                             -0.139 + 0.654f, -0.211f,
                             -0.130 + 0.654f, -0.207f,
                             -0.135 + 0.654f, -0.213f,
                             -0.125 + 0.654f, -0.211f,
                             -0.133 + 0.654f, -0.215f,
                             -0.123 + 0.654f, -0.216f,
                             -0.132 + 0.654f, -0.220f,
                             -0.123 + 0.654f, -0.220f,
                             -0.132 + 0.654f, -0.265f,
                             -0.123 + 0.654f, -0.265f,

                             -0.789 + 1.671f, -0.205f,
                             -0.789 + 1.671f, -0.21f,
                             -0.763 + 1.671f, -0.205f,
                             -0.763 + 1.671f, -0.21f,

                             -0.782 + 1.671f, -0.19f,
                             -0.782 + 1.671f, -0.255f,
                             -0.772 + 1.671f, -0.19f,
                             -0.772 + 1.671f, -0.255f,

                                 -0.772 + 1.671f, -0.184f,
                                 -0.782 + 1.671f, -0.19f,
                                 -0.772 + 1.671f, -0.19f,

                                 -0.763 + 1.671f, -0.259f,
                                 -0.763 + 1.671f, -0.265f,
                                 -0.769 + 1.671f, -0.259f,
                                 -0.770 + 1.671f, -0.266f,
                                 -0.771 + 1.671f, -0.258f,
                                 -0.775 + 1.671f, -0.265f,
                                 -0.772 + 1.671f, -0.255f,
                                 -0.781 + 1.671f, -0.261f,
                                 -0.782 + 1.671f, -0.255f,

                                 -0.482f, -0.182f,
                                 -0.482f, -0.265f,
                                 -0.472f, -0.182f,
                                 -0.472f, -0.265f,

                                 -0.346f, -0.238f,
                                 -0.356f, -0.238f,
                                 -0.347f, -0.243f,
                                 -0.357f, -0.243f,
                                 -0.35f, -0.25f,
                                 -0.36f, -0.248f,
                                 -0.355f, -0.256f,
                                 -0.364f, -0.252f,
                                 -0.365f, -0.263f,
                                 -0.37f, -0.255f,
                                 -0.375f, -0.266f,
                                 -0.377f, -0.257f,
                                 -0.385f, -0.267f,
                                 -0.386f, -0.257f,
                                 -0.395f, -0.265f,
                                 -0.395f, -0.255f,
                                 -0.405f, -0.26f,
                                 -0.402f, -0.25f,
                                 -0.414f, -0.25f,
                                 -0.409f, -0.24f,
                                 -0.42f, -0.24f,
                                 -0.411f, -0.23f,
                                 -0.422f, -0.23f,
                                 -0.411f, -0.214f,
                                 -0.422f, -0.214f,
                                 -0.409f, -0.206f,
                                 -0.42f, -0.206f,
                                 -0.405f, -0.2f,
                                 -0.415f, -0.197f,
                                 -0.4f, -0.194f,
                                 -0.41f, -0.191f,
                                 -0.39f, -0.19f,
                                 -0.4f, -0.184f,
                                 -0.382f, -0.189f,
                                 -0.39f, -0.181f,
                                 -0.376f, -0.189f,
                                 -0.38f, -0.181f,
                                 -0.372f, -0.19f,
                                 -0.37f, -0.181f,
                                 -0.365f, -0.194f,
                                 -0.361f, -0.186f,
                                 -0.3616f, -0.197f,
                                 -0.354f, -0.192f,
                                 -0.359f, -0.2f,
                                 -0.349f, -0.198f,
                                 -0.3576f, -0.205f,
                                 -0.348f, -0.204f,

                                 -0.323f, -0.181f,
                                 -0.323f, -0.265f,
                                 -0.312f, -0.181f,
                                 -0.312f, -0.265f,

                                 -0.312f, -0.221f,
                                 -0.312f, -0.211f,
                                 -0.307f, -0.215f,
                                 -0.306f, -0.2065f,
                                 -0.3035f, -0.213f,
                                 -0.3015f, -0.204f,
                                 -0.299f, -0.211f,
                                 -0.285f, -0.204f,
                                 -0.293f, -0.211f,
                                 -0.28f, -0.208f,
                                 -0.288f, -0.2135f,
                                 -0.275f, -0.213f,
                                 -0.284f, -0.217f,
                                 -0.273f, -0.22f,
                                 -0.283f, -0.22f,
                                 -0.273f, -0.265f,
                                 -0.283f, -0.265f,

                                 -0.207f, -0.248f,
                                 -0.207f, -0.255f,
                                 -0.21f, -0.252f,
                                 -0.21f, -0.258f,
                                 -0.213f, -0.254f,
                                 -0.214f, -0.262f,
                                 -0.217f, -0.257f,
                                 -0.222f, -0.266f,
                                 -0.224f, -0.259f,
                                 -0.23f, -0.267f,
                                 -0.23f, -0.2576f,
                                 -0.238f, -0.264f,
                                 -0.236f, -0.254f,
                                 -0.245f, -0.258f,
                                 -0.238f, -0.25f,
                                 -0.248f, -0.25f,
                                 -0.238f, -0.204f,
                                 -0.248f, -0.204f,

                                     -0.207f, -0.204f,
                                     -0.207f, -0.265f,
                                     -0.197f, -0.204f,
                                     -0.197f, -0.265f,

                                     0.323 - 0.379f, -0.212f,
                                     0.323 - 0.379f, -0.224f,
                                     0.317 - 0.379f, -0.206f,
                                     0.317 - 0.379f, -0.215f,
                                     0.31 - 0.379f, -0.203f,
                                     0.31 - 0.379f, -0.211f,
                                     0.295 - 0.379f, -0.204f,
                                     0.302 - 0.379f, -0.211f,
                                     0.285 - 0.379f, -0.212f,
                                     0.295 - 0.379f, -0.215f,
                                     0.279 - 0.379f, -0.222f,
                                     0.29 - 0.379f, -0.223f,
                                     0.279 - 0.379f, -0.245f,
                                     0.289 - 0.379f, -0.245f,
                                     0.283 - 0.379f, -0.253f,
                                     0.294 - 0.379f, -0.253f,
                                     0.289 - 0.379f, -0.26f,
                                     0.305 - 0.379f, -0.257f,
                                     0.297 - 0.379f, -0.265f,
                                     0.315 - 0.379f, -0.255f,
                                     0.313 - 0.379f, -0.265f,
                                     0.323 - 0.379f, -0.245f,
                                     0.323 - 0.379f, -0.258f,

                                     0.323 - 0.379f, -0.204f,
                                     0.323 - 0.379f, -0.27f,
                                     0.333 - 0.379f, -0.204f,
                                     0.333 - 0.379f, -0.27f,

                                     0.333 - 0.379f, -0.27f,
                                     0.323 - 0.379f, -0.27f,
                                     0.329 - 0.379f, -0.28f,
                                     0.318 - 0.379f, -0.28f,
                                     0.32 - 0.379f, -0.287f,
                                     0.31 - 0.379f, -0.283f,
                                     0.31 - 0.379f, -0.29f,
                                     0.3 - 0.379f, -0.283f,
                                     0.3 - 0.379f, -0.29f,
                                     0.294 - 0.379f, -0.28f,
                                     0.29 - 0.379f, -0.287f,
                                     0.29 - 0.379f, -0.273f,
                                     0.282 - 0.379f, -0.28f,
                                     0.28 - 0.379f, -0.273f,

                                     0.009f, -0.181f,
                                     0.009f, -0.265f,
                                     0.019f, -0.181f,
                                     0.019f, -0.265f,

                                     0.019f, -0.215f,
                                     0.019f, -0.226f,
                                     0.067f, -0.215f,
                                     0.067f, -0.226f,

                                     0.067f, -0.181f,
                                     0.067f, -0.265f,
                                     0.079f, -0.181f,
                                     0.079f, -0.265f,

                                     0.101f, -0.249f,
                                     0.109f, -0.248f,
                                     0.105f, -0.259f,
                                     0.115f, -0.257f,
                                     0.115f, -0.265f,
                                     0.124f, -0.259f,
                                     0.125f, -0.266f,
                                     0.13f, -0.259f,
                                     0.135f, -0.266f,
                                     0.137f, -0.257f,
                                     0.145f, -0.26f,
                                     0.142f, -0.254f,
                                     0.151f, -0.253f,
                                     0.142f, -0.25f,
                                     0.151f, -0.245f,
                                     0.142f, -0.245f,
                                     0.15f, -0.24f,
                                     0.135f, -0.242f,
                                     0.145f, -0.236f,
                                     0.125f, -0.239f,
                                     0.135f, -0.232f,
                                     0.115f, -0.236f,
                                     0.118f, -0.227f,
                                     0.105f, -0.231f,
                                     0.113f, -0.224f,
                                     0.101f, -0.223f,
                                     0.11f, -0.218f,
                                     0.102f, -0.214f,
                                     0.115f, -0.213f,
                                     0.11f, -0.206f,
                                     0.12f, -0.211f,
                                     0.12f, -0.203f,
                                     0.125f, -0.211f,
                                     0.125f, -0.203f,
                                     0.13f, -0.211f,
                                     0.13f, -0.203f,
                                     0.135f, -0.213f,
                                     0.135f, -0.204f,
                                     0.143f, -0.209f,
                                     0.14f, -0.22f,
                                     0.149f, -0.218f,

                                         0.323f, -0.212f,
                                         0.323f, -0.224f,
                                         0.317f, -0.206f,
                                         0.317f, -0.215f,
                                         0.31f, -0.203f,
                                         0.31f, -0.211f,
                                         0.295f, -0.204f,
                                         0.302f, -0.211f,
                                         0.285f, -0.212f,
                                         0.295f, -0.215f,
                                         0.279f, -0.222f,
                                         0.29f, -0.223f,
                                         0.279f, -0.245f,
                                         0.289f, -0.245f,
                                         0.283f, -0.253f,
                                         0.294f, -0.253f,
                                         0.289f, -0.26f,
                                         0.305f, -0.257f,
                                         0.297f, -0.265f,
                                         0.315f, -0.255f,
                                         0.313f, -0.265f,
                                         0.323f, -0.245f,
                                         0.323f, -0.258f,

                                         0.323f, -0.204f,
                                         0.323f, -0.27f,
                                         0.333f, -0.204f,
                                         0.333f, -0.27f,

                                         0.333f, -0.27f,
                                         0.323f, -0.27f,
                                         0.329f, -0.28f,
                                         0.318f, -0.28f,
                                         0.32f, -0.287f,
                                         0.31f, -0.283f,
                                         0.31f, -0.29f,
                                         0.3f, -0.283f,
                                         0.3f, -0.29f,
                                         0.294f, -0.28f,
                                         0.29f, -0.287f,
                                         0.29f, -0.273f,
                                         0.282f, -0.28f,
                                         0.28f, -0.273f,

                                         0.398f, -0.181f,
                                         0.387f, -0.181f,
                                         0.398f, -0.24f,
                                         0.387f, -0.244f,
                                         0.4f, -0.249f,
                                         0.394f, -0.257f,
                                         0.41f, -0.255f,
                                         0.404f, -0.263f,
                                         0.417f, -0.257f,
                                         0.414f, -0.266f,
                                         0.424f, -0.257f,
                                         0.424f, -0.266f,
                                         0.43f, -0.256f,
                                         0.434f, -0.265f,
                                         0.435f, -0.254f,
                                         0.444f, -0.26f,
                                         0.44f, -0.251f,
                                         0.45f, -0.255f,
                                         0.444f, -0.24f,
                                         0.455f, -0.245f,
                                         0.444f, -0.181f,
                                         0.455f, -0.181f,

                                         0.595f, -0.204f,
                                         0.585f, -0.204f,
                                         0.62f, -0.265f,
                                         0.61f, -0.265f,

                                         0.643f, -0.204f,
                                         0.633f, -0.204f,
                                         0.62f, -0.265f,
                                         0.61f, -0.265f,

                                         0.714f, -0.249f,
                                         0.705f, -0.248f,
                                         0.708f, -0.259f,
                                         0.700f, -0.255f,
                                         0.698f, -0.265f,
                                         0.690f, -0.259f,
                                         0.688f, -0.268f,
                                         0.680f, -0.258f,
                                         0.675f, -0.265f,
                                         0.675f, -0.256f,
                                         0.664f, -0.257f,
                                         0.670f, -0.250f,
                                         0.658f, -0.247f,
                                         0.668f, -0.237f,
                                         0.658f, -0.230f,
                                         0.668f, -0.230f,
                                         0.660f, -0.220f,
                                         0.668f, -0.223f,
                                         0.664f, -0.213f,
                                         0.671f, -0.217f,
                                         0.669f, -0.208f,
                                         0.678f, -0.212f,
                                         0.679f, -0.204f,
                                         0.687f, -0.211f,
                                         0.695f, -0.204f,
                                         0.693f, -0.211f,
                                         0.704f, -0.209f,
                                         0.700f, -0.216f,
                                         0.711f, -0.215f,
                                         0.705f, -0.221f,
                                         0.714f, -0.224f,
                                         0.705f, -0.230f,
                                         0.714f, -0.23f,

                                             0.668f, -0.230f,
                                             0.668f, -0.237f,
                                             0.714f, -0.230f,
                                             0.714f, -0.237f,

                                             0.745f, -0.212f,
                                             0.745f, -0.224f,
                                             0.750f, -0.209f,
                                             0.750f, -0.216f,
                                             0.754f, -0.205f,
                                             0.756f, -0.212f,
                                             0.760f, -0.204f,
                                             0.760f, -0.212f,
                                             0.765f, -0.205f,
                                             0.765f, -0.214f,
                                             0.769f, -0.208f,

                                             0.736f, -0.204f,
                                             0.736f, -0.265f,
                                             0.745f, -0.204f,
                                             0.745f, -0.265f,

                                             0.101 + 0.68f, -0.249f,
                                             0.109 + 0.68f, -0.248f,
                                             0.105 + 0.68f, -0.259f,
                                             0.115 + 0.68f, -0.257f,
                                             0.115 + 0.68f, -0.265f,
                                             0.124 + 0.68f, -0.259f,
                                             0.125 + 0.68f, -0.266f,
                                             0.13 + 0.68f, -0.259f,
                                             0.135 + 0.68f, -0.266f,
                                             0.137 + 0.68f, -0.257f,
                                             0.145 + 0.68f, -0.26f,
                                             0.142 + 0.68f, -0.254f,
                                             0.151 + 0.68f, -0.253f,
                                             0.142 + 0.68f, -0.25f,
                                             0.151 + 0.68f, -0.245f,
                                             0.142 + 0.68f, -0.245f,
                                             0.15 + 0.68f, -0.24f,
                                             0.135 + 0.68f, -0.242f,
                                             0.145 + 0.68f, -0.236f,
                                             0.125 + 0.68f, -0.239f,
                                             0.135 + 0.68f, -0.232f,
                                             0.115 + 0.68f, -0.236f,
                                             0.118 + 0.68f, -0.227f,
                                             0.105 + 0.68f, -0.231f,
                                             0.113 + 0.68f, -0.224f,
                                             0.101 + 0.68f, -0.223f,
                                             0.11 + 0.68f, -0.218f,
                                             0.102 + 0.68f, -0.214f,
                                             0.115 + 0.68f, -0.213f,
                                             0.11 + 0.68f, -0.206f,
                                             0.12 + 0.68f, -0.211f,
                                             0.12 + 0.68f, -0.203f,
                                             0.125 + 0.68f, -0.211f,
                                             0.125 + 0.68f, -0.203f,
                                             0.13 + 0.68f, -0.211f,
                                             0.13 + 0.68f, -0.203f,
                                             0.135 + 0.68f, -0.213f,
                                             0.135 + 0.68f, -0.204f,
                                             0.143 + 0.68f, -0.209f,
                                             0.14 + 0.68f, -0.22f,
                                             0.149 + 0.68f, -0.218f,

                                             0.958f, -0.265f,
                                             0.947f, -0.265f,
                                             0.954f, -0.275f,
                                             0.946f, -0.270f,
                                             0.950f, -0.280f,
                                             0.942f, -0.277f,
                                             0.944f, -0.287f,
                                             0.940f, -0.281f,
                                             0.938f, -0.289f,
                                             0.927f, -0.281f,
                                             0.930f, -0.289f,

                                             0.923f, -0.205f,
                                             0.947f, -0.265f,
                                             0.934f, -0.205f,
                                             0.958f, -0.265f,

                                             0.968f, -0.205f,
                                             0.947f, -0.265f,
                                             0.979f, -0.205f,
                                             0.958f, -0.265f,

    };


    glEnableClientState(GL_VERTEX_ARRAY);

    glVertexPointer(2, GL_FLOAT, 0, vertices);
}
void arrayDraw_national(void) {
    setupPointers_national();
    glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 4, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 8, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 12, 21);
    glDrawArrays(GL_TRIANGLE_STRIP, 33, 26);
    glDrawArrays(GL_TRIANGLE_STRIP, 59, 5);
    glDrawArrays(GL_TRIANGLE_STRIP, 64, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 68, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 72, 3);
    glDrawArrays(GL_TRIANGLE_STRIP, 75, 9);
    glDrawArrays(GL_TRIANGLE_STRIP, 84, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 88, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 92, 21);
    glDrawArrays(GL_TRIANGLE_STRIP, 113, 26);
    glDrawArrays(GL_TRIANGLE_STRIP, 139, 5);
    glDrawArrays(GL_TRIANGLE_STRIP, 144, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 148, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 152, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 156, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 160, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 164, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 168, 33);
    glDrawArrays(GL_TRIANGLE_STRIP, 201, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 205, 17);
    glDrawArrays(GL_TRIANGLE_STRIP, 222, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 226, 17);
    glDrawArrays(GL_TRIANGLE_STRIP, 243, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 247, 17);
    glDrawArrays(GL_TRIANGLE_STRIP, 264, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 268, 17);
    glDrawArrays(GL_TRIANGLE_STRIP, 285, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 289, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 293, 3);
    glDrawArrays(GL_TRIANGLE_STRIP, 296, 9);
    glDrawArrays(GL_TRIANGLE_STRIP, 305, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 309, 47);
    glDrawArrays(GL_TRIANGLE_STRIP, 356, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 360, 17);
    glDrawArrays(GL_TRIANGLE_STRIP, 377, 18);
    glDrawArrays(GL_TRIANGLE_STRIP, 395, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 399, 23);
    glDrawArrays(GL_TRIANGLE_STRIP, 422, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 426, 14);
    glDrawArrays(GL_TRIANGLE_STRIP, 440, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 444, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 448, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 452, 41);
    glDrawArrays(GL_TRIANGLE_STRIP, 493, 23);
    glDrawArrays(GL_TRIANGLE_STRIP, 516, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 520, 14);
    glDrawArrays(GL_TRIANGLE_STRIP, 534, 22);
    glDrawArrays(GL_TRIANGLE_STRIP, 556, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 560, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 564, 33);
    glDrawArrays(GL_TRIANGLE_STRIP, 597, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 601, 11);
    glDrawArrays(GL_TRIANGLE_STRIP, 612, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 616, 41);
    glDrawArrays(GL_TRIANGLE_STRIP, 657, 11);
    glDrawArrays(GL_TRIANGLE_STRIP, 668, 4);
    glDrawArrays(GL_TRIANGLE_STRIP, 672, 4);
}

void elementDraw_kuo(void) {
    setupPointers_kuo();
    indexCounter(0, 13);
    glDrawElements(GL_POLYGON, 13, GL_UNSIGNED_INT, index);
    indexCounter(13, 5);
    glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
    indexCounter(18, 21);
    glDrawElements(GL_POLYGON, 21, GL_UNSIGNED_INT, index);
    indexCounter(39, 7);
    glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
    indexCounter(46, 14);
    glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, index);
    indexCounter(60, 16);
    glDrawElements(GL_POLYGON, 16, GL_UNSIGNED_INT, index);
    indexCounter(76, 20);
    glDrawElements(GL_POLYGON, 20, GL_UNSIGNED_INT, index);
    indexCounter(96, 11);
    glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
    indexCounter(107, 25);
    glDrawElements(GL_POLYGON, 25, GL_UNSIGNED_INT, index);
    indexCounter(132, 23);
    glDrawElements(GL_POLYGON, 23, GL_UNSIGNED_INT, index);
    indexCounter(155, 17);
    glDrawElements(GL_POLYGON, 17, GL_UNSIGNED_INT, index);
    indexCounter(172, 11);
    glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
    indexCounter(183, 5);
    glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
}
void elementDraw_li() {
    setupPointers_li();
    indexCounter(0, 22);
    glDrawElements(GL_POLYGON, 22, GL_UNSIGNED_INT, index);
    indexCounter(22, 11);
    glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
    indexCounter(33, 15);
    glDrawElements(GL_POLYGON, 15, GL_UNSIGNED_INT, index);
    indexCounter(48, 12);
    glDrawElements(GL_POLYGON, 12, GL_UNSIGNED_INT, index);
    indexCounter(60, 15);
    glDrawElements(GL_POLYGON, 15, GL_UNSIGNED_INT, index);
    indexCounter(75, 24);
    glDrawElements(GL_POLYGON, 24, GL_UNSIGNED_INT, index);
}
void elementDraw_chung() {
    setupPointers_chung();
    indexCounter( 0, 21);
    glDrawElements(GL_POLYGON, 21, GL_UNSIGNED_INT, index);
    indexCounter( 21, 26);
    glDrawElements(GL_POLYGON, 26, GL_UNSIGNED_INT, index);
    indexCounter( 47, 20);
    glDrawElements(GL_POLYGON, 20, GL_UNSIGNED_INT, index);
    indexCounter( 67, 10);
    glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, index);
    indexCounter( 77, 30);
    glDrawElements(GL_POLYGON, 30, GL_UNSIGNED_INT, index);
    indexCounter( 107, 11);
    glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
}
void elementDraw_hsing() {
    setupPointers_hsing();
    indexCounter( 0, 54);
    glDrawElements(GL_POLYGON, 54, GL_UNSIGNED_INT, index);
    indexCounter( 54, 15);
    glDrawElements(GL_POLYGON, 15, GL_UNSIGNED_INT, index);
    indexCounter( 69, 14);
    glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, index);
    indexCounter( 83, 14);
    glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, index);
    indexCounter( 97, 10);
    glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, index);
    indexCounter( 107, 13);
    glDrawElements(GL_POLYGON, 13, GL_UNSIGNED_INT, index);
    indexCounter( 120, 4);
    glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
    indexCounter( 124, 5);
    glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
    indexCounter( 129, 4);
    glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
    indexCounter( 133, 4);
    glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
    indexCounter( 137, 10);
    glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, index);
    indexCounter( 147, 9);
    glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, index);
    indexCounter( 156, 11);
    glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
    indexCounter( 167, 6);
    glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
    indexCounter( 173, 8);
    glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, index);
    indexCounter( 181, 13);
    glDrawElements(GL_POLYGON, 13, GL_UNSIGNED_INT, index);
    indexCounter( 194, 5);
    glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
    indexCounter( 199, 7);
    glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
}
void elementDraw_da() {
   setupPointers_da();
   indexCounter( 0, 20);
   glDrawElements(GL_POLYGON, 20, GL_UNSIGNED_INT, index);
   indexCounter( 20, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 23, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 26, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 29, 9);
   glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, index);
   indexCounter( 38, 7);
   glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
   indexCounter( 45, 9);
   glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, index);
   indexCounter( 54, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 58, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 62, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 68, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 73, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 77, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 81, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 85, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 89, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 94, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 98, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 102, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 108, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 111, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 116, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 119, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
}
void elementDraw_xue() {
    setupPointers_xue();
   indexCounter( 0, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 5, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 8, 12);
   glDrawElements(GL_POLYGON, 12, GL_UNSIGNED_INT, index);
   indexCounter( 20, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 23, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 27, 9);
   glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, index);
   indexCounter( 36, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 42, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 45, 8);
   glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, index);
   indexCounter( 53, 16);
   glDrawElements(GL_POLYGON, 16, GL_UNSIGNED_INT, index);
   indexCounter( 69, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 72, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 75, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 81, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 84, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 87, 12);
   glDrawElements(GL_POLYGON, 12, GL_UNSIGNED_INT, index);
   indexCounter( 99, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 102, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 105, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 109, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 113, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 117, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 122, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 125, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 129, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 132, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 136, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 142, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 146, 9);
   glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, index);
   indexCounter( 155, 8);
   glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, index);
   indexCounter( 163, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 166, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 169, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 172, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 177, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 180, 11);
   glDrawElements(GL_POLYGON, 11, GL_UNSIGNED_INT, index);
   indexCounter( 191, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 194, 7);
   glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
   indexCounter( 201, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 204, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 207, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 210, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 215, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 219, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 222, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 228, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 231, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 234, 7);
   glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
   indexCounter( 241, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 244, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 250, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 254, 14);
   glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, index);
   indexCounter( 268, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 273, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 279, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 282, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 285, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 288, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 292, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 295, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 300, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 304, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 309, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 314, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 317, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 321, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 325, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 328, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
}
void elementDraw_logo() {
    setupPointers_logo();
   indexCounter( 0, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 4, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 8, 14);
   glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, index);
   indexCounter( 22, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 26, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 29, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 32, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 36, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 40, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 45, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 49, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 55, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 59, 6);
   glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, index);
   indexCounter( 65, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 70, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 74, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 79, 7);
   glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
   indexCounter( 86, 7);
   glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, index);
   indexCounter( 93, 5);
   glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, index);
   indexCounter( 98, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 102, 4);
   glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, index);
   indexCounter( 106, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
   indexCounter( 109, 3);
   glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
}
void elementDraw_ball() {
    setupPointers_ball();
    indexCounter( 0, 16);
    glDrawElements(GL_POLYGON, 16, GL_UNSIGNED_INT, index);
    indexCounter( 16, 3);
    glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
    indexCounter( 19, 3);
    glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, index);
    indexCounter( 22, 12);
    glDrawElements(GL_POLYGON, 12, GL_UNSIGNED_INT, index);
    glColor3f(0.0, 0.5, 0.6);
}
void elementDraw_national() {
    setupPointers_national();
    indexCounter( 0, 4);
    glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
    indexCounter( 4, 4);
    glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
    indexCounter( 8, 4);
    glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
    indexCounter( 12, 21);
    glDrawElements(GL_TRIANGLE_STRIP, 21, GL_UNSIGNED_INT, index);
    indexCounter( 33, 26);
    glDrawElements(GL_TRIANGLE_STRIP, 26, GL_UNSIGNED_INT, index);
    indexCounter( 59, 5);
    glDrawElements(GL_TRIANGLE_STRIP, 5, GL_UNSIGNED_INT, index);
    indexCounter( 64, 4);
    glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 68, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 72, 3);
   glDrawElements(GL_TRIANGLE_STRIP, 3, GL_UNSIGNED_INT, index);
   indexCounter( 75, 9);
   glDrawElements(GL_TRIANGLE_STRIP, 9, GL_UNSIGNED_INT, index);
   indexCounter( 84, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 88, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 92, 21);
   glDrawElements(GL_TRIANGLE_STRIP, 21, GL_UNSIGNED_INT, index);
   indexCounter( 113, 26);
   glDrawElements(GL_TRIANGLE_STRIP, 26, GL_UNSIGNED_INT, index);
   indexCounter( 139, 5);
   glDrawElements(GL_TRIANGLE_STRIP, 5, GL_UNSIGNED_INT, index);
   indexCounter( 144, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 148, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 152, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 156, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 160, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 164, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 168, 33);
   glDrawElements(GL_TRIANGLE_STRIP, 33, GL_UNSIGNED_INT, index);
   indexCounter( 201, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 205, 17);
   glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, index);
   indexCounter( 222, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 226, 17);
   glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, index);
   indexCounter( 243, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 247, 17);
   glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, index);
   indexCounter( 264, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 268, 17);
   glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, index);
   indexCounter( 285, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 289, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 293, 3);
   glDrawElements(GL_TRIANGLE_STRIP, 3, GL_UNSIGNED_INT, index);
   indexCounter( 296, 9);
   glDrawElements(GL_TRIANGLE_STRIP, 9, GL_UNSIGNED_INT, index);
   indexCounter( 305, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 309, 47);
   glDrawElements(GL_TRIANGLE_STRIP, 47, GL_UNSIGNED_INT, index);
   indexCounter( 356, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 360, 17);
   glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, index);
   indexCounter( 377, 18);
   glDrawElements(GL_TRIANGLE_STRIP, 18, GL_UNSIGNED_INT, index);
   indexCounter( 395, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 399, 23);
   glDrawElements(GL_TRIANGLE_STRIP, 23, GL_UNSIGNED_INT, index);
   indexCounter( 422, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 426, 14);
   glDrawElements(GL_TRIANGLE_STRIP, 14, GL_UNSIGNED_INT, index);
   indexCounter( 440, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 444, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 448, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 452, 41);
   glDrawElements(GL_TRIANGLE_STRIP, 41, GL_UNSIGNED_INT, index);
   indexCounter( 493, 23);
   glDrawElements(GL_TRIANGLE_STRIP, 23, GL_UNSIGNED_INT, index);
   indexCounter( 516, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 520, 14);
   glDrawElements(GL_TRIANGLE_STRIP, 14, GL_UNSIGNED_INT, index);
   indexCounter( 534, 22);
   glDrawElements(GL_TRIANGLE_STRIP, 22, GL_UNSIGNED_INT, index);
   indexCounter( 556, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 560, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 564, 33);
   glDrawElements(GL_TRIANGLE_STRIP, 33, GL_UNSIGNED_INT, index);
   indexCounter( 597, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 601, 11);
   glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, index);
   indexCounter( 612, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 616, 41);
   glDrawElements(GL_TRIANGLE_STRIP, 41, GL_UNSIGNED_INT, index);
   indexCounter( 657, 11);
   glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, index);
   indexCounter( 668, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
   indexCounter( 672, 4);
   glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, index);
}

void multiArrayDraw_kuo() {
    setupPointers_kuo();
    static GLint first[] = { 0, 13, 18, 39, 46, 60, 76, 96, 107, 132, 155, 172, 183 };
    static GLsizei count[] = { 13, 5, 21, 7, 14, 16, 20, 11, 25, 23, 17, 11, 5 };
    glMultiDrawArrays(GL_POLYGON, first, count, 13);
}
void multiArrayDraw_li() {
    setupPointers_li();
    GLint first[] = { 0, 22, 33, 48, 60, 75};
    GLint count[] = { 22, 11, 15, 12, 15, 24};
    glMultiDrawArrays(GL_POLYGON, first, count, 6);
}
void multiArrayDraw_chung() {
    setupPointers_chung();
    GLint first[] = { 0,21,47,67,77,107};
    GLint count[] = { 21,26,20,10,30,11 };
    glMultiDrawArrays(GL_POLYGON, first, count, 6);
}
void multiArrayDraw_hsing() {
    setupPointers_hsing();
    GLint first[] = { 0,
54,
69,
83,
97,
107,
120,
124,
129,
133,
137,
147,
156,
167,
173,
181,
194,
199};
    GLint count[] = { 54,
     15,
     14,
     14,
     10,
      13,
      4,
      5,
      4,
      4,
      10,
      9,
      11,
      6,
      8,
      13,
      5,
      7 };
    glMultiDrawArrays(GL_POLYGON, first, count, 18);
     
}
void multiArrayDraw_da() {
    setupPointers_da();
    GLint first[] = { 0,
20,
23,
26,
29,
38,
45,
54,
58,
62,
68,
73,
77,
81,
85,
89,
94,
98,
102,
108,
111,
116,
119};
    GLint count[] = { 20,
 3,
 3,
 3,
 9,
 7,
 9,
 4,
 4,
 6,
 5,
 4,
 4,
 4,
 4,
 5,
 4,
 4,
 6,
 3,
 5,
 3,
 4};
    glMultiDrawArrays(GL_POLYGON, first, count, 23);
}
void multiArrayDraw_xue() {
    setupPointers_xue();
    GLint first[] = { 0,
     5,
     8,
     20,
     23,
     27,
     36,
     42,
     45,
     53,
     69,
     72,
     75,
     81,
     84,
     87,
     99,
     102,
     105,
     109,
     113,
     117,
     122,
     125,
     129,
     132,
     136,
     142,
     146,
     155,
     163,
     166,
     169,
     172,
     177,
     180,
     191,
     194,
     201,
     204,
     207,
     210,
     215,
     219,
     222,
     228,
     231,
     234,
     241,
     244,
     250,
     254,
     268,
     273,
     279,
     282,
     285,
     288,
     292,
     295,
     300,
     304,
     309,
     314,
     317,
     321,
     325,
     328};
    GLint count[] = { 5,
 3,
12,
 3,
 4,
 9,
 6,
 3,
 8,
16,
 3,
 3,
 6,
 3,
 3,
12,
 3,
 3,
 4,
 4,
 4,
 5,
 3,
 4,
 3,
 4,
 6,
 4,
 9,
 8,
 3,
 3,
 3,
 5,
 3,
11,
 3,
 7,
 3,
 3,
 3,
 5,
 4,
 3,
 6,
 3,
 3,
 7,
 3,
 6,
 4,
14,
 5,
 6,
 3,
 3,
 3,
 4,
 3,
 5,
 4,
 5,
 5,
 3,
 4,
 4,
 3,
 4};
    glMultiDrawArrays(GL_POLYGON, first, count, 68);
} 
void multiArrayDraw_logo() {
    setupPointers_logo();
    GLint first[] = { 0,
     4,
     8,
     22,
     26,
     29,
     32,
     36,
     40,
     45,
     49,
     55,
     59,
     65,
     70,
     74,
     79,
     86,
     93,
     98,
     102,
     106,
     109};
    GLint count[] = { 4,
 4,
14,
 4,
 3,
 3,
 4,
 4,
 5,
 4,
 6,
 4,
 6,
 5,
 4,
 5,
 7,
 7,
 5,
 4,
 4,
 3,
 3};
    glMultiDrawArrays(GL_POLYGON, first, count, 23);
}
void multiArrayDraw_ball() {
    setupPointers_ball();
    GLint first[] = { 0, 16, 19, 22};
    GLint count[] = {16, 3, 3, 12};       // 3 BALL COLOR
    glMultiDrawArrays(GL_POLYGON, first, count, 4);
    glColor3f(0.0, 0.5, 0.6);
}
void multiArrayDraw_national() {
    setupPointers_national();
    GLint first[] = { 0,
     4,
     8,
     12,
     33,
     59,
     64,
     68,
     72,
     75,
     84,
     88,
     92,
     113,
     139,
     144,
     148,
     152,
     156,
     160,
     164,
     168,
     201,
     205,
     222,
     226,
     243,
     247,
     264,
     268,
     285,
     289,
     293,
     296,
     305,
     309,
     356,
     360,
     377,
     395,
     399,
     422,
     426,
     440,
     444,
     448,
     452,
     493,
     516,
     520,
     534,
     556,
     560,
     564,
     597,
     601,
     612,
     616,
     657,
     668,
     672 };
    GLint count[] = { 4,
 4,
 4,
21,
26,
 5,
 4,
 4,
 3,
 9,
 4,
 4,
21,
26,
 5,
 4,
 4,
 4,
 4,
 4,
 4,
33,
 4,
17,
 4,
17,
 4,
17,
 4,
17,
 4,
 4,
 3,
 9,
 4,
47,
 4,
17,
18,
 4,
23,
 4,
14,
 4,
 4,
 4,
41,
23,
 4,
14,
22,
 4,
 4,
33,
 4,
11,
 4,
41,
11,
 4,
 4 };
    glMultiDrawArrays(GL_TRIANGLE_STRIP, first, count, 61);
}

void multiElementDraw_kuo() {
    setupPointers_kuo();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    indexCounter2( indices1, 0, 13);
    indexCounter2( indices2, 13, 5);
    indexCounter2( indices3, 18, 21);
    indexCounter2( indices4, 39, 7);
    indexCounter2( indices5, 46, 14);
    indexCounter2( indices6, 60, 16);
    indexCounter2( indices7, 76, 20);
    indexCounter2( indices8, 96, 11);
    indexCounter2( indices9, 107, 25);
    indexCounter2( indices10, 132, 23);
    indexCounter2( indices11, 155, 17);
    indexCounter2( indices12, 172, 11);
    indexCounter2( indices13, 183, 5);
    GLsizei count[13] = { 13, 5, 21, 7, 14, 16, 20, 11, 25, 23, 17, 11, 5};
    GLvoid* indices[13] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10, indices11, indices12, indices13};
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 13);
}
void multiElementDraw_li() {
    setupPointers_li();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    indexCounter2( indices1, 0, 22);
    indexCounter2( indices2, 22, 11);
    indexCounter2( indices3, 33, 15);
    indexCounter2( indices4, 48, 12);
    indexCounter2( indices5, 60, 15);
    indexCounter2( indices6, 75, 24);
    GLsizei count[] = { 22, 11, 15, 12, 15, 24 };
    GLvoid* indices[6] = { indices1, indices2, indices3, indices4, indices5, indices6 };
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 6);
}
void multiElementDraw_chung() {
    setupPointers_chung();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    indexCounter2( indices1, 0, 21);
    indexCounter2( indices2, 21, 26);
    indexCounter2( indices3, 47, 20);
    indexCounter2( indices4, 67, 10);
    indexCounter2( indices5, 77, 30);
    indexCounter2( indices6, 107, 11);

    GLsizei count[] = { 21,26,20,10,30,11 };
    GLvoid* indices[6] = { indices1, indices2, indices3, indices4, indices5, indices6};
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 6);
}
void multiElementDraw_hsing() {
    setupPointers_hsing();
    GLuint indices1[60];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    GLuint indices14[50];
    GLuint indices15[50];
    GLuint indices16[50];
    GLuint indices17[50];
    GLuint indices18[50];
    indexCounter2( indices1, 0, 54);
    indexCounter2( indices2, 54, 15);
    indexCounter2( indices3, 69, 14);
    indexCounter2( indices4, 83, 14);
    indexCounter2( indices5, 97, 10);
    indexCounter2( indices6, 107, 13);
    indexCounter2( indices7, 120, 4);
    indexCounter2( indices8, 124, 5);
    indexCounter2( indices9, 129, 4);
    indexCounter2( indices10, 133, 4);
    indexCounter2( indices11, 137, 10);
    indexCounter2( indices12, 147, 9);
    indexCounter2( indices13, 156, 11);
    indexCounter2( indices14, 167, 6);
    indexCounter2( indices15, 173, 8);
    indexCounter2( indices16, 181, 13);
    indexCounter2( indices17, 194, 5);
    indexCounter2( indices18, 199, 7);
    GLsizei count[] = { 54,
     15,
     14,
     14,
     10,
      13,
      4,
      5,
      4,
      4,
      10,
      9,
      11,
      6,
      8,
      13,
      5,
      7 };
    GLvoid* indices[18] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10, indices11, indices12, indices13, indices14, indices15, indices16, indices17,indices18 };
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 18);
}
void multiElementDraw_da() {
    setupPointers_da();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    GLuint indices14[50];
    GLuint indices15[50];
    GLuint indices16[50];
    GLuint indices17[50];
    GLuint indices18[50];
    GLuint indices19[50];
    GLuint indices20[50];
    GLuint indices21[50];
    GLuint indices22[50];
    GLuint indices23[50];
    indexCounter2( indices1, 0, 20);
    indexCounter2( indices2, 20, 3);
    indexCounter2( indices3, 23, 3);
    indexCounter2( indices4, 26, 3);
    indexCounter2( indices5, 29, 9);
    indexCounter2( indices6, 38, 7);
    indexCounter2( indices7, 45, 9);
    indexCounter2( indices8, 54, 4);
    indexCounter2( indices9, 58, 4);
    indexCounter2( indices10, 62, 6);
    indexCounter2( indices11, 68, 5);
    indexCounter2( indices12, 73, 4);
    indexCounter2( indices13, 77, 4);
    indexCounter2( indices14, 81, 4);
    indexCounter2( indices15, 85, 4);
    indexCounter2( indices16, 89, 5);
    indexCounter2( indices17, 94, 4);
    indexCounter2( indices18, 98, 4);
    indexCounter2( indices19, 102, 6);
    indexCounter2( indices20, 108, 3);
    indexCounter2( indices21, 111, 5);
    indexCounter2( indices22, 116, 3);
    indexCounter2( indices23, 119, 4);

    GLsizei count[] = { 20,
 3,
 3,
 3,
 9,
 7,
 9,
 4,
 4,
 6,
 5,
 4,
 4,
 4,
 4,
 5,
 4,
 4,
 6,
 3,
 5,
 3,
 4 };
    GLvoid* indices[23] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10,
                            indices11, indices12, indices13, indices14, indices15, indices16, indices17, indices18, indices19, indices20 
                            ,indices21 , indices22 , indices23};
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 23);
}
void multiElementDraw_xue() {
    setupPointers_xue();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    GLuint indices14[50];
    GLuint indices15[50];
    GLuint indices16[50];
    GLuint indices17[50];
    GLuint indices18[50];
    GLuint indices19[50];
    GLuint indices20[50];
    GLuint indices21[50];
    GLuint indices22[50];
    GLuint indices23[50];
    GLuint indices24[50];
    GLuint indices25[50];
    GLuint indices26[50];
    GLuint indices27[50];
    GLuint indices28[50];
    GLuint indices29[50];
    GLuint indices30[50];
    GLuint indices31[50];
    GLuint indices32[50];
    GLuint indices33[50];
    GLuint indices34[50];
    GLuint indices35[50];
    GLuint indices36[50];
    GLuint indices37[50];
    GLuint indices38[50];
    GLuint indices39[50];
    GLuint indices40[50];
    GLuint indices41[50];
    GLuint indices42[50];
    GLuint indices43[50];
    GLuint indices44[50];
    GLuint indices45[50];
    GLuint indices46[50];
    GLuint indices47[50];
    GLuint indices48[50];
    GLuint indices49[50];
    GLuint indices50[50];
    GLuint indices51[50];
    GLuint indices52[50];
    GLuint indices53[50];
    GLuint indices54[50];
    GLuint indices55[50];
    GLuint indices56[50];
    GLuint indices57[50];
    GLuint indices58[50];
    GLuint indices59[50];
    GLuint indices60[50];
    GLuint indices61[50];
    GLuint indices62[50];
    GLuint indices63[50];
    GLuint indices64[50];
    GLuint indices65[50];
    GLuint indices66[50];
    GLuint indices67[50];
    GLuint indices68[50];
    indexCounter2( indices1, 0, 5);
    indexCounter2( indices2, 5, 3);
    indexCounter2( indices3, 8, 12);
    indexCounter2( indices4, 20, 3);
    indexCounter2( indices5, 23, 4);
    indexCounter2( indices6, 27, 9);
    indexCounter2( indices7, 36, 6);
    indexCounter2( indices8, 42, 3);
    indexCounter2( indices9, 45, 8);
    indexCounter2( indices10, 53, 16);
    indexCounter2( indices11, 69, 3);
    indexCounter2( indices12, 72, 3);
    indexCounter2( indices13, 75, 6);
    indexCounter2( indices14, 81, 3);
    indexCounter2( indices15, 84, 3);
    indexCounter2( indices16, 87, 12);
    indexCounter2( indices17, 99, 3);
    indexCounter2( indices18, 102, 3);
    indexCounter2( indices19, 105, 4);
    indexCounter2( indices20, 109, 4);
    indexCounter2( indices21, 113, 4);
    indexCounter2( indices22, 117, 5);
    indexCounter2( indices23, 122, 3);
    indexCounter2( indices24, 125, 4);
    indexCounter2( indices25, 129, 3);
    indexCounter2( indices26, 132, 4);
    indexCounter2( indices27, 136, 6);
    indexCounter2( indices28, 142, 4);
    indexCounter2( indices29, 146, 9);
    indexCounter2( indices30, 155, 8);
    indexCounter2( indices31, 163, 3);
    indexCounter2( indices32, 166, 3);
    indexCounter2( indices33, 169, 3);
    indexCounter2( indices34, 172, 5);
    indexCounter2( indices35, 177, 3);
    indexCounter2( indices36, 180, 11);
    indexCounter2( indices37, 191, 3);
    indexCounter2( indices38, 194, 7);
    indexCounter2( indices39, 201, 3);
    indexCounter2( indices40, 204, 3);
    indexCounter2( indices41, 207, 3);
    indexCounter2( indices42, 210, 5);
    indexCounter2( indices43, 215, 4);
    indexCounter2( indices44, 219, 3);
    indexCounter2( indices45, 222, 6);
    indexCounter2( indices46, 228, 3);
    indexCounter2( indices47, 231, 3);
    indexCounter2( indices48, 234, 7);
    indexCounter2( indices49, 241, 3);
    indexCounter2( indices50, 244, 6);
    indexCounter2( indices51, 250, 4);
    indexCounter2( indices52, 254, 14);
    indexCounter2( indices53, 268, 5);
    indexCounter2( indices54, 273, 6);
    indexCounter2( indices55, 279, 3);
    indexCounter2( indices56, 282, 3);
    indexCounter2( indices57, 285, 3);
    indexCounter2( indices58, 288, 4);
    indexCounter2( indices59, 292, 3);
    indexCounter2( indices60, 295, 5);
    indexCounter2( indices61, 300, 4);
    indexCounter2( indices62, 304, 5);
    indexCounter2( indices63, 309, 5);
    indexCounter2( indices64, 314, 3);
    indexCounter2( indices65, 317, 4);
    indexCounter2( indices66, 321, 4);
    indexCounter2( indices67, 325, 3);
    indexCounter2( indices68, 328, 4);



    GLsizei count[] = { 5,
 3,
12,
 3,
 4,
 9,
 6,
 3,
 8,
16,
 3,
 3,
 6,
 3,
 3,
12,
 3,
 3,
 4,
 4,
 4,
 5,
 3,
 4,
 3,
 4,
 6,
 4,
 9,
 8,
 3,
 3,
 3,
 5,
 3,
11,
 3,
 7,
 3,
 3,
 3,
 5,
 4,
 3,
 6,
 3,
 3,
 7,
 3,
 6,
 4,
14,
 5,
 6,
 3,
 3,
 3,
 4,
 3,
 5,
 4,
 5,
 5,
 3,
 4,
 4,
 3,
 4 };
    GLvoid * indices[68] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10,
                                indices11, indices12, indices13, indices14, indices15, indices16, indices17, indices18, indices19, indices20
                                , indices21, indices22, indices23, indices24, indices25, indices26, indices27, indices28, indices29, indices30
                                , indices31, indices32, indices33, indices34, indices35, indices36, indices37, indices38, indices39, indices40
                                , indices41, indices42, indices43, indices44, indices45, indices46, indices47, indices48, indices49, indices50
                                , indices51, indices52, indices53, indices54, indices55, indices56, indices57, indices58, indices59, indices60
                                , indices61, indices62, indices63, indices64, indices65, indices66, indices67, indices68 };
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 68);
}
void multiElementDraw_logo() {
    setupPointers_logo();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    GLuint indices14[50];
    GLuint indices15[50];
    GLuint indices16[50];
    GLuint indices17[50];
    GLuint indices18[50];
    GLuint indices19[50];
    GLuint indices20[50];
    GLuint indices21[50];
    GLuint indices22[50];
    GLuint indices23[50];
    indexCounter2( indices1, 0, 4);
    indexCounter2( indices2, 4, 4);
    indexCounter2( indices3, 8, 14);
    indexCounter2( indices4, 22, 4);
    indexCounter2( indices5, 26, 3);
    indexCounter2( indices6, 29, 3);
    indexCounter2( indices7, 32, 4);
    indexCounter2( indices8, 36, 4);
    indexCounter2( indices9, 40, 5);
    indexCounter2( indices10, 45, 4);
    indexCounter2( indices11, 49, 6);
    indexCounter2( indices12, 55, 4);
    indexCounter2( indices13, 59, 6);
    indexCounter2( indices14, 65, 5);
    indexCounter2( indices15, 70, 4);
    indexCounter2( indices16, 74, 5);
    indexCounter2( indices17, 79, 7);
    indexCounter2( indices18, 86, 7);
    indexCounter2( indices19, 93, 5);
    indexCounter2( indices20, 98, 4);
    indexCounter2( indices21, 102, 4);
    indexCounter2( indices22, 106, 3);
    indexCounter2( indices23, 109, 3);

    GLsizei count[] = { 4,
 4,
14,
 4,
 3,
 3,
 4,
 4,
 5,
 4,
 6,
 4,
 6,
 5,
 4,
 5,
 7,
 7,
 5,
 4,
 4,
 3,
 3 };
    GLvoid* indices[23] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10, 
                            indices11, indices12, indices13, indices14, indices15, indices16, indices17,indices18, indices19, indices20
                            , indices21, indices22, indices23};
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 23);
}
void multiElementDraw_ball() {
    setupPointers_ball();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    indexCounter2( indices1, 0, 16);
    indexCounter2( indices2, 16, 3);
    indexCounter2( indices3, 19, 3);
    indexCounter2( indices4, 22, 12);

    GLsizei count[] = { 16, 3, 3, 12 };
    GLvoid* indices[4] = { indices1, indices2, indices3, indices4};
    glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices, 4);
}
void multiElementDraw_national() {
    setupPointers_national();
    GLuint indices1[50];
    GLuint indices2[50];
    GLuint indices3[50];
    GLuint indices4[50];
    GLuint indices5[50];
    GLuint indices6[50];
    GLuint indices7[50];
    GLuint indices8[50];
    GLuint indices9[50];
    GLuint indices10[50];
    GLuint indices11[50];
    GLuint indices12[50];
    GLuint indices13[50];
    GLuint indices14[50];
    GLuint indices15[50];
    GLuint indices16[50];
    GLuint indices17[50];
    GLuint indices18[50];
    GLuint indices19[50];
    GLuint indices20[50];
    GLuint indices21[50];
    GLuint indices22[50];
    GLuint indices23[50];
    GLuint indices24[50];
    GLuint indices25[50];
    GLuint indices26[50];
    GLuint indices27[50];
    GLuint indices28[50];
    GLuint indices29[50];
    GLuint indices30[50];
    GLuint indices31[50];
    GLuint indices32[50];
    GLuint indices33[50];
    GLuint indices34[50];
    GLuint indices35[50];
    GLuint indices36[50];
    GLuint indices37[50];
    GLuint indices38[50];
    GLuint indices39[50];
    GLuint indices40[50];
    GLuint indices41[50];
    GLuint indices42[50];
    GLuint indices43[50];
    GLuint indices44[50];
    GLuint indices45[50];
    GLuint indices46[50];
    GLuint indices47[50];
    GLuint indices48[50];
    GLuint indices49[50];
    GLuint indices50[50];
    GLuint indices51[50];
    GLuint indices52[50];
    GLuint indices53[50];
    GLuint indices54[50];
    GLuint indices55[50];
    GLuint indices56[50];
    GLuint indices57[50];
    GLuint indices58[50];
    GLuint indices59[50];
    GLuint indices60[50];
    GLuint indices61[50];
    indexCounter2( indices1, 0, 4);
    indexCounter2( indices2, 4, 4);
    indexCounter2( indices3, 8, 4);
    indexCounter2( indices4, 12, 21);
    indexCounter2( indices5, 33, 26);
    indexCounter2( indices6, 59, 5);
    indexCounter2( indices7, 64, 4);
    indexCounter2( indices8, 68, 4);
    indexCounter2( indices9, 72, 3);
    indexCounter2( indices10, 75, 9);
    indexCounter2( indices11, 84, 4);
    indexCounter2( indices12, 88, 4);
    indexCounter2( indices13, 92, 21);
    indexCounter2( indices14, 113, 26);
    indexCounter2( indices15, 139, 5);
    indexCounter2( indices16, 144, 4);
    indexCounter2( indices17, 148, 4);
    indexCounter2( indices18, 152, 4);
    indexCounter2( indices19, 156, 4);
    indexCounter2( indices20, 160, 4);
    indexCounter2( indices21, 164, 4);
    indexCounter2( indices22, 168, 33);
    indexCounter2( indices23, 201, 4);
    indexCounter2( indices24, 205, 17);
    indexCounter2( indices25, 222, 4);
    indexCounter2( indices26, 226, 17);
    indexCounter2( indices27, 243, 4);
    indexCounter2( indices28, 247, 17);
    indexCounter2( indices29, 264, 4);
    indexCounter2( indices30, 268, 17);
    indexCounter2( indices31, 285, 4);
    indexCounter2( indices32, 289, 4);
    indexCounter2( indices33, 293, 3);
    indexCounter2( indices34, 296, 9);
    indexCounter2( indices35, 305, 4);
    indexCounter2( indices36, 309, 47);
    indexCounter2( indices37, 356, 4);
    indexCounter2( indices38, 360, 17);
    indexCounter2( indices39, 377, 18);
    indexCounter2( indices40, 395, 4);
    indexCounter2( indices41, 399, 23);
    indexCounter2( indices42, 422, 4);
    indexCounter2( indices43, 426, 14);
    indexCounter2( indices44, 440, 4);
    indexCounter2( indices45, 444, 4);
    indexCounter2( indices46, 448, 4);
    indexCounter2( indices47, 452, 41);
    indexCounter2( indices48, 493, 23);
    indexCounter2( indices49, 516, 4);
    indexCounter2( indices50, 520, 14);
    indexCounter2( indices51, 534, 22);
    indexCounter2( indices52, 556, 4);
    indexCounter2( indices53, 560, 4);
    indexCounter2( indices54, 564, 33);
    indexCounter2( indices55, 597, 4);
    indexCounter2( indices56, 601, 11);
    indexCounter2( indices57, 612, 4);
    indexCounter2( indices58, 616, 41);
    indexCounter2( indices59, 657, 11);
    indexCounter2( indices60, 668, 4);
    indexCounter2( indices61, 672, 4);

    GLsizei count[] = { 4,
 4,
 4,
21,
26,
 5,
 4,
 4,
 3,
 9,
 4,
 4,
21,
26,
 5,
 4,
 4,
 4,
 4,
 4,
 4,
33,
 4,
17,
 4,
17,
 4,
17,
 4,
17,
 4,
 4,
 3,
 9,
 4,
47,
 4,
17,
18,
 4,
23,
 4,
14,
 4,
 4,
 4,
41,
23,
 4,
14,
22,
 4,
 4,
33,
 4,
11,
 4,
41,
11,
 4,
 4 };
    GLvoid* indices[61] = { indices1, indices2, indices3, indices4, indices5, indices6, indices7, indices8, indices9, indices10,
                                indices11, indices12, indices13, indices14, indices15, indices16, indices17, indices18, indices19, indices20
                                , indices21, indices22, indices23, indices24, indices25, indices26, indices27, indices28, indices29, indices30
                                , indices31, indices32, indices33, indices34, indices35, indices36, indices37, indices38, indices39, indices40
                                , indices41, indices42, indices43, indices44, indices45, indices46, indices47, indices48, indices49, indices50
                                , indices51, indices52, indices53, indices54, indices55, indices56, indices57, indices58, indices59, indices60
                                , indices61};
    glMultiDrawElements(GL_TRIANGLE_STRIP, count, GL_UNSIGNED_INT, indices, 61);
}

void robot_arm() {
    glColor3f(1, 1, 1);
    glPushMatrix();
        glScalef(0.1, 0.1, 0.2);
        glRotatef(10, 0, 1, 0);  
        glTranslatef(-1.5,-0.4, 9);
        glPushMatrix();        //Upper arm
            glTranslatef(0.6, -0.82, 2);
            glScalef(1, 1, 3);
            glutWireCube(0.4);
        glPopMatrix();
        glPushMatrix();         //Lower arm
            glRotatef(20, 1, 0, 0);
            glTranslatef(0.6, -0.3, 0.93);
            glScalef(1, 1, 3);
            glutWireCube(0.4);
        glPopMatrix();
       glPushMatrix();         //right most finger
            glRotatef(20, 1, 0, 0);
            glTranslatef(0.74, -0.16, 0.17);
            glScalef(0.3, 0.3, 0.8);
            glutWireCube(0.4);
        glPopMatrix();
        glPushMatrix();         //right most finger 2
        glTranslatef(0.74, -0.15, -0.22);
        glScalef(0.3, 0.3, 0.8);
        glutWireCube(0.4);
        glPopMatrix();
        glPushMatrix();         //middle finger
            glRotatef(20, 1, 0, 0);
            glTranslatef(0.6, -0.16, 0.17);
            glScalef(0.3, 0.3, 0.8);
            glutWireCube(0.4);
        glPopMatrix(); 
        glPushMatrix();         //middle finger 2
        glTranslatef(0.6, -0.15, -0.22);
        glScalef(0.3, 0.3, 0.8);
        glutWireCube(0.4);
        glPopMatrix();
        
        glPushMatrix();         //index finger
            glRotatef(90, 1, 0, 0);
            glTranslatef(0.46, 0.21, 0.05);
            glScalef(0.3, 0.3, 0.8);
            glutWireCube(0.4);
        glPopMatrix();
        glPushMatrix();         //index finger 2
        glRotatef(35, 1, 0, 0);
        glTranslatef(0.46, 0.24, -0.1);
        glScalef(0.3, 0.3, 0.8);
        glutWireCube(0.4);
        glPopMatrix();
        
        glPushMatrix();         //thumb finger
            glTranslatef(0.46, -0.523, -0.02);
            glScalef(0.3, 0.3, 0.8);
            glutWireCube(0.4);
        glPopMatrix();
        glPushMatrix();         //thumb finger 2
            glRotatef(35, 1, 0, 0);
            glTranslatef(0.46, -0.545, -0.04);
            glScalef(0.3, 0.3, 0.8);
            glutWireCube(0.4);
        glPopMatrix();

    glPopMatrix();
        
}

void draw_planet() {
    glPushMatrix();
    glScalef(0.1, 0.1, 0.1);
    glTranslatef(0.5, 0.5, 17.5);
        glPushMatrix();
            glRotatef(pivotRotateAngle, 0.0, 1.0, 0.0);
            glColor3d(1.0f, 0.5f, 0.0f);
            glutWireSphere(.5, 50, 16);   /* draw sun */
        glPopMatrix();
        glPushMatrix();
            glRotatef(rotateAngle*-1, 0.0, 1.0, 0.0);
            glTranslatef(1.6, 0.0, 0.0);        
            glRotatef(pivotRotateAngle, 0.0, 1.0, 0.0);
            glColor3f(0.0f, 0.0f, 1.0f);
            glutWireSphere(0.1, 10, 8);    /* draw smaller planet */
        glPopMatrix();
        glPushMatrix();
            glRotatef(rotateAngle, 0.0, 1.0, 0.0);
            glTranslatef(1.0, 0.0, 0.0);
            glRotatef(pivotRotateAngle, 0.0, 1.0, 0.0);
            glColor3f(0.0f, 1.0f, 0.0f);
            glutWireSphere(0.2, 10, 8);    /* draw smaller planet2 */
        glPopMatrix();
    glPopMatrix();
    glutSwapBuffers();
    
}
void rotation() {
    Sleep(100);
    rotateAngle = (rotateAngle + 5) % 360;
    pivotRotateAngle = (pivotRotateAngle + 20) % 360;
}
void draw_world(int derefMethod) {
    if (derefMethod == DRAWARRAY) {
        glColor3f(0.0, 0.5, 0.6);
        glPushMatrix();
            glTranslatef(0.0, 0.0, 0.3);
            arrayDraw_kuo();
            arrayDraw_li();
            arrayDraw_chung();
            arrayDraw_hsing();
            arrayDraw_da();
            arrayDraw_xue();
            glPushMatrix();
                glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
                glRotatef(pivotRotateAngle, 0.804, 0.137, 0);
                arrayDraw_logo();
                glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
                arrayDraw_ball();
            glPopMatrix();
            arrayDraw_national();
        glPopMatrix();
    }
    else if (derefMethod == DRAWELEMENTS) {
        glColor3f(0.0, 0.5, 0.6);
        elementDraw_kuo();
        elementDraw_li();
        elementDraw_chung();
        elementDraw_hsing();
        elementDraw_da();
        elementDraw_xue();
        glPushMatrix();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            glRotatef(pivotRotateAngle, 0.804, 0.137, 0);
            elementDraw_logo();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            elementDraw_ball();
        glPopMatrix();
        elementDraw_national();
    }
    else if (derefMethod == DRAWMULTIARRAY) {
        glColor3f(0.0, 0.5, 0.6);
        multiArrayDraw_kuo();
        multiArrayDraw_li();
        multiArrayDraw_chung();
        multiArrayDraw_hsing();
        multiArrayDraw_da();
        multiArrayDraw_xue();
        glPushMatrix();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            glRotatef(pivotRotateAngle, 0.804, 0.137, 0);
            multiArrayDraw_logo();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            multiArrayDraw_ball();
        glPopMatrix();
        multiArrayDraw_national();
    }
    else if (derefMethod == DRAWMULTIELEMENT) {
        glColor3f(0.0, 0.5, 0.6);
        multiElementDraw_kuo();
        multiElementDraw_li();
        multiElementDraw_chung();
        multiElementDraw_hsing();
        multiElementDraw_da();
        multiElementDraw_xue();
        glPushMatrix();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            glRotatef(pivotRotateAngle, 0.804, 0.137, 0);
            multiElementDraw_logo();
            glColor3ub((rand() % 255), (rand() % 255), (rand() % 255));
            multiElementDraw_ball();
        glPopMatrix();
        glColor3f(0.0, 0.5, 0.6);
        multiElementDraw_national();
    }
}
void output(float x, float y, float r, float g, float b, char* string)
{   
    glDisable(GL_DEPTH_TEST);
    glColor3f(r, g, b);
    glRasterPos2f(x, y);
    int len, i;
    len = (int)strlen(string);
    for (i = 0; i < len; i++) {
        glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, string[i]);
    }
    glEnable(GL_DEPTH_TEST);    
}
void camera() {         
    if (movement.Foward) 
        moveZ += MOVEMENTSPEED;
            
    if (movement.Backward) 
        moveZ -= MOVEMENTSPEED;
    
    if (movement.Left) 
        moveX += MOVEMENTSPEED;

    if (movement.Right)
        moveX -= MOVEMENTSPEED;

    glTranslatef(moveX, 0   , moveZ);
}   
void arm_Movement() {
    int move = 0;
    if ((movement.Backward || movement.Foward || movement.Left || movement.Right) && armMoveZ < 0.07 ) {
        armMoveZ = 0.07;
    }
    else {
        armMoveZ = -0.07;
    }
    glTranslatef(0, 0, armMoveZ/2);
}
void timer(int) {
    glutPostRedisplay();
    glutTimerFunc(1000 / FPS, timer, 0);
}
void init(void) 
{
   glClearColor (0.0, 0.0, 0.0, 0.0);
   glEnable(GL_DEPTH_TEST);
   glShadeModel (GL_SMOOTH);
}
void display(void)
{
   char string[] = "Esc: Exit";

   glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
   glPushMatrix();
       camera();                //Translate LOGO to creat movement effect on character perspective
       glScalef(5, 5, 1);       
       draw_world(derefMethod);
   glPopMatrix();
   glPushMatrix();
   glTranslatef(0, 0, 1.05);
       glPushMatrix();
           arm_Movement();      //Makes arm move when walking
           robot_arm();
           draw_planet();
       glPopMatrix();
   glPopMatrix();
   output(-3.0, -1.7, 1.0, 1.0, 1.0, string);
   glFlush ();
}

void reshape (int w, int h)
{
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity ();
   gluPerspective(60.0, (GLfloat)w / (GLfloat)h, 0.0001, 50.0);
   glViewport(0, 0, (GLsizei)w, (GLsizei)h);
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
   gluLookAt(0.0, 0.0, 3.5, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
}

void mouse (int button, int state, int x, int y)
{
   switch (button) {
      case GLUT_LEFT_BUTTON:
         if (state == GLUT_DOWN) {
             glRotatef(5, 0.0, 1.0, 0);
         }
        
         break;

      case GLUT_MIDDLE_BUTTON:
          if (state == GLUT_DOWN) {
              glRotatef(-5, 1.0, 0.0, 0.0);
          }
          
          break;
      case GLUT_RIGHT_BUTTON:
          if (state == GLUT_DOWN) {
              glRotatef(-5, 0.0, 1.0, 0.0);
          }
          
         break;
      default:
         break;
   }
}

void keyboard(unsigned char key, int x, int y)
{
   switch (key) {
      case 49:
          if (derefMethod != DRAWARRAY)
              derefMethod = DRAWARRAY;
         break;

      case 50:
          if (derefMethod != DRAWELEMENTS)
              derefMethod = DRAWELEMENTS;
          break;

      case 51:
          if (derefMethod != DRAWMULTIARRAY)
              derefMethod = DRAWMULTIARRAY;
          break;

      case 52:
          if (derefMethod != DRAWMULTIELEMENT)
              derefMethod = DRAWMULTIELEMENT;
          break;
      case 27:
          glutDestroyWindow(window);
          exit (0);
          break;
      case 'W':
      case 'w':
          movement.Foward = true;
          break;

      case 'A':
      case 'a':
          movement.Left = true;
          break;

      case 'S':
      case 's':
          movement.Backward = true;
          break;

      case 'D':
      case 'd':
          movement.Right = true;
          break;
          
   }
}

void keyboard_Up(unsigned char key, int x, int y) {
    switch (key) {
    case 'W':
    case 'w':
        movement.Foward = false;
        break;

    case 'A':
    case 'a':
        movement.Left = false;
        break;

    case 'S':
    case 's':
        movement.Backward = false;
        break;

    case 'D':
    case 'd':
        movement.Right = false;
        break;

    }
}

int main(int argc, char** argv)
{
   glutInit(&argc, argv);
   glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
   glutInitWindowSize (1280, 720); 
   glutInitWindowPosition (100, 100);
   window = glutCreateWindow("main");
   glewExperimental = GL_TRUE;
   if (glewInit()) {
       exit(EXIT_FAILURE);
   }
   init ();

   glutFullScreen();
   glutDisplayFunc(display); 
   glutReshapeFunc(reshape);
   glutTimerFunc(0, timer, 0);
   //glutMouseFunc(mouse);
   glutKeyboardFunc (keyboard);
   glutKeyboardUpFunc(keyboard_Up);
   glutIdleFunc(rotation);
   glutMainLoop();
   return 0;
}
